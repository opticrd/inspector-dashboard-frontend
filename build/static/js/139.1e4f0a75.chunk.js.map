{"version":3,"sources":["views/extensions/sweet-alert/SweetAlertBasic.js","views/extensions/sweet-alert/SweetAlertPositions.js","views/extensions/sweet-alert/SweetAlertAnimations.js","views/extensions/sweet-alert/SweetAlertTypes.js","views/extensions/sweet-alert/SweetAlertOptions.js","views/extensions/sweet-alert/SweetAlertCallback.js","views/extensions/sweet-alert/index.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardText.js","@core/components/extensions-header/index.js"],"names":["MySwal","withReactContent","Swal","BasicSweetAlert","Card","CardHeader","CardTitle","tag","CardBody","CardText","className","Button","color","onClick","fire","title","customClass","confirmButton","buttonsStyling","outline","text","icon","footer","html","showCloseButton","showCancelButton","focusConfirm","confirmButtonText","size","cancelButtonText","cancelButton","SweetAlertPositions","position","showConfirmButton","timer","AnimatedSweetAlert","showClass","popup","SweetAlertTypes","SweetAlertOptions","imageUrl","alertImg","imageWidth","imageHeight","imageAlt","timerInterval","onBeforeOpen","showLoading","setInterval","getContent","querySelector","textContent","getTimerLeft","onClose","clearInterval","then","result","dismiss","DismissReason","console","log","allowOutsideClick","mixin","input","progressSteps","queue","value","JSON","stringify","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","login","fetch","response","ok","Error","statusText","json","catch","error","showValidationMessage","avatar_url","BasicSweetCallback","Row","Col","md","sm","cancel","SweetAlert","subTitle","link","SweetAlertBasic","SweetAlertAnimations","SweetAlertCallback","propTypes","tagPropType","PropTypes","string","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","innerRef","oneOfType","func","ref","ExtensionsHeader","href","target","rel"],"mappings":"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","file":"static/js/139.1e4f0a75.chunk.js","sourcesContent":["import Swal from 'sweetalert2'\r\nimport { ThumbsUp, ThumbsDown } from 'react-feather'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  CardText,\r\n} from 'reactstrap'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst BasicSweetAlert = function() {\r\n  const handleBasicTitleAlert = () =>\r\n    MySwal.fire({\r\n      title: 'Any fool can use a computer',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleTitleAlert = () =>\r\n    MySwal.fire({\r\n      title: 'The Internet?,',\r\n      text: 'That thing is still around?',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleFooterAlert = () =>\r\n    MySwal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Something went wrong!',\r\n      footer: '<a href=\"javascript:void(0);\">Why do I have this issue?</a>',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleHTMLAlert = () =>\r\n    MySwal.fire({\r\n      title: '<strong>HTML <u>example</u></strong>',\r\n      icon: 'info',\r\n      html:\r\n        'You can use <b>bold text</b>, ' +\r\n        '<a href=\"https://pixinvent.com/\" target=\"_blank\">links</a> ' +\r\n        'and other HTML tags',\r\n      showCloseButton: true,\r\n      showCancelButton: true,\r\n      focusConfirm: false,\r\n      confirmButtonText: (\r\n        <span className=\"align-middle\">\r\n          <ThumbsUp className=\"mr-50\" size={15} />\r\n          <span className=\"align-middle\">Great!</span>\r\n        </span>\r\n      ),\r\n      cancelButtonText: <ThumbsDown size={15} />,\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ml-1',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Basic</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className=\"mb-0\">\r\n          SweetAlert automatically centers itself on the page and looks great no\r\n          matter if you're using a desktop computer, mobile or tablet. It's even\r\n          highly customizable, as you can see below!\r\n        </CardText>\r\n        <div className=\"demo-inline-spacing\">\r\n          <Button color=\"primary\" onClick={handleBasicTitleAlert} outline>\r\n            Basic\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleTitleAlert} outline>\r\n            With Title\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleFooterAlert} outline>\r\n            With Footer\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleHTMLAlert} outline>\r\n            HTML\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BasicSweetAlert\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  CardText,\r\n} from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertPositions = function() {\r\n  const handleTopStart = () =>\r\n    MySwal.fire({\r\n      position: 'top-start',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n\r\n  const handleTopEnd = () =>\r\n    MySwal.fire({\r\n      position: 'top-end',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n\r\n  const handleBottomStart = () =>\r\n    MySwal.fire({\r\n      position: 'bottom-start',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n\r\n  const handleBottomEnd = () =>\r\n    MySwal.fire({\r\n      position: 'bottom-end',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Position</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className=\"mb-0\">\r\n          You can specify position of your alert with\r\n          <code>\r\n            {'position : top-start | top-end | bottom-start | bottom-end '}\r\n          </code>{' '}\r\n        </CardText>\r\n        <div className=\"demo-inline-spacing\">\r\n          <Button color=\"primary\" onClick={handleTopStart} outline>\r\n            Top Start\r\n          </Button>\r\n\r\n          <Button color=\"primary\" onClick={handleTopEnd} outline>\r\n            Top End\r\n          </Button>\r\n\r\n          <Button color=\"primary\" onClick={handleBottomStart} outline>\r\n            Bottom Start\r\n          </Button>\r\n\r\n          <Button color=\"primary\" onClick={handleBottomEnd} outline>\r\n            Bottom End\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertPositions\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  CardText,\r\n} from 'reactstrap'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst AnimatedSweetAlert = function() {\r\n  const handleBounceIn = () =>\r\n    MySwal.fire({\r\n      title: 'Bounce In Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__bounceIn',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleFadeIn = () =>\r\n    MySwal.fire({\r\n      title: 'Fade In Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__fadeIn',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleFlipIn = () =>\r\n    MySwal.fire({\r\n      title: 'Flip In Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__flipInX',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleTada = () =>\r\n    MySwal.fire({\r\n      title: 'Tada Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__tada',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleShake = () =>\r\n    MySwal.fire({\r\n      title: 'Shake Animation',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      showClass: {\r\n        popup: 'animate__animated animate__shakeX',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Animations</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className=\"mb-0\">\r\n          Use <code>popup</code> inside <code>showClass</code> parameter to add\r\n          animation to your alert.\r\n        </CardText>\r\n        <div className=\"demo-inline-spacing\">\r\n          <Button color=\"primary\" onClick={handleBounceIn} outline>\r\n            Bounce In\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleFadeIn} outline>\r\n            Fade In\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleFlipIn} outline>\r\n            Flip In\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleTada} outline>\r\n            Tada\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleShake} outline>\r\n            Shake\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AnimatedSweetAlert\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  CardText,\r\n} from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertTypes = function() {\r\n  const handleSuccess = () =>\r\n    MySwal.fire({\r\n      title: 'Good job!',\r\n      text: 'You clicked the button!',\r\n      icon: 'success',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleInfo = () =>\r\n    MySwal.fire({\r\n      title: 'Info!',\r\n      text: 'You clicked the button!',\r\n      icon: 'info',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleWarning = () =>\r\n    MySwal.fire({\r\n      title: 'Warning!',\r\n      text: ' You clicked the button!',\r\n      icon: 'warning',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleError = () =>\r\n    MySwal.fire({\r\n      title: 'Error!',\r\n      text: ' You clicked the button!',\r\n      icon: 'error',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n      },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Types</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText className=\"mb-0\">\r\n          SweetAlert comes with 4 built-in types which will show a corresponding\r\n          icon animation: \"warning\", \"error\", \"success\" and \"info\".\r\n        </CardText>\r\n        <div className=\"demo-inline-spacing\">\r\n          <Button color=\"success\" onClick={handleSuccess} outline>\r\n            Success\r\n          </Button>\r\n          <Button color=\"danger\" onClick={handleError} outline>\r\n            Error\r\n          </Button>\r\n          <Button color=\"warning\" onClick={handleWarning} outline>\r\n            Warning\r\n          </Button>\r\n          <Button color=\"info\" onClick={handleInfo} outline>\r\n            Info\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertTypes\r\n","import { Card, CardHeader, CardBody, CardTitle, Button } from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport alertImg from '@src/assets/images/slider/04.jpg'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst SweetAlertOptions = function() {\r\n  const handleImageAlert = () =>\r\n    MySwal.fire({\r\n      title: 'Sweet!',\r\n      text: 'Modal with a custom image.',\r\n      imageUrl: alertImg,\r\n      imageWidth: 400,\r\n      imageHeight: 200,\r\n      imageAlt: 'Custom image',\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleTimeoutAlert = () => {\r\n    let timerInterval\r\n    Swal.fire({\r\n      title: 'Auto close alert!',\r\n      html: 'I will close in <strong></strong> seconds.',\r\n      timer: 2000,\r\n      onBeforeOpen() {\r\n        Swal.showLoading()\r\n        timerInterval = setInterval(() => {\r\n          Swal.getContent().querySelector('strong').textContent =\r\n            Swal.getTimerLeft()\r\n        }, 100)\r\n      },\r\n      onClose() {\r\n        clearInterval(timerInterval)\r\n      },\r\n    }).then((result) => {\r\n      if (result.dismiss === Swal.DismissReason.timer) {\r\n        console.log('I was closed by the timer')\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleClickOutside = () =>\r\n    MySwal.fire({\r\n      title: 'Click outside to close!',\r\n      text: 'This is a cool message!',\r\n      allowOutsideClick: true,\r\n      customClass: { confirmButton: 'btn btn-primary' },\r\n      buttonsStyling: false,\r\n    })\r\n\r\n  const handleQuestions = () =>\r\n    MySwal.mixin({\r\n      input: 'text',\r\n      confirmButtonText: 'Next &rarr;',\r\n      showCancelButton: true,\r\n      progressSteps: ['1', '2', '3'],\r\n      buttonsStyling: false,\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ml-1',\r\n      },\r\n    })\r\n      .queue(['Question 1', 'Question 2', 'Question 3'])\r\n      .then((result) => {\r\n        if (result.value) {\r\n          MySwal.fire({\r\n            title: 'All done!',\r\n            html: `Your answers: <pre><code>${JSON.stringify(\r\n              result.value,\r\n            )}</code></pre>`,\r\n            confirmButtonText: 'Lovely!',\r\n            customClass: { confirmButton: 'btn btn-primary' },\r\n          })\r\n        }\r\n      })\r\n\r\n  const handleAjax = () => {\r\n    MySwal.fire({\r\n      title: 'Search for a user',\r\n      input: 'text',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ml-1',\r\n      },\r\n      buttonsStyling: false,\r\n      inputAttributes: {\r\n        autocapitalize: 'off',\r\n      },\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Look up',\r\n      showLoaderOnConfirm: true,\r\n      preConfirm(login) {\r\n        return fetch(`//api.github.com/users/${login}`)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(response.statusText)\r\n            }\r\n            return response.json()\r\n          })\r\n          .catch((error) => {\r\n            MySwal.showValidationMessage(`Request failed:  ${error}`)\r\n          })\r\n      },\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          title: `${result.value.login}'s avatar`,\r\n          imageUrl: result.value.avatar_url,\r\n          customClass: {\r\n            confirmButton: 'btn btn-primary',\r\n          },\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Options</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"demo-inline-spacing\">\r\n          <Button color=\"primary\" onClick={handleImageAlert} outline>\r\n            Image\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleTimeoutAlert} outline>\r\n            Timeout\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleClickOutside} outline>\r\n            Click Outside\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleQuestions} outline>\r\n            Question\r\n          </Button>\r\n          <Button color=\"primary\" onClick={handleAjax} outline>\r\n            Ajax\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default SweetAlertOptions\r\n","import {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  Button,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst BasicSweetCallback = function() {\r\n  const handleConfirmText = () =>\r\n    MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-outline-danger ml-1',\r\n      },\r\n      buttonsStyling: false,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: 'Your file has been deleted.',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success',\r\n          },\r\n        })\r\n      }\r\n    })\r\n\r\n  const handleConfirmCancel = () =>\r\n    MySwal.fire({\r\n      title: 'Are you sure?',\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      customClass: {\r\n        confirmButton: 'btn btn-primary',\r\n        cancelButton: 'btn btn-danger ml-1',\r\n      },\r\n      buttonsStyling: false,\r\n    }).then((result) => {\r\n      if (result.value) {\r\n        MySwal.fire({\r\n          icon: 'success',\r\n          title: 'Deleted!',\r\n          text: 'Your file has been deleted.',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success',\r\n          },\r\n        })\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        MySwal.fire({\r\n          title: 'Cancelled',\r\n          text: 'Your imaginary file is safe :)',\r\n          icon: 'error',\r\n          customClass: {\r\n            confirmButton: 'btn btn-success',\r\n          },\r\n        })\r\n      }\r\n    })\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Callback</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col className=\"mb-2 mb-md-0\" md=\"6\" sm=\"12\">\r\n            <h5 className=\"mb-1\">Confirm Button Text</h5>\r\n            <Button color=\"primary\" onClick={handleConfirmText} outline>\r\n              Confirm Text\r\n            </Button>\r\n          </Col>\r\n\r\n          <Col md=\"6\" sm=\"12\">\r\n            <h5 className=\"mb-1\">Confirm Button Color</h5>\r\n            <Button color=\"primary\" onClick={handleConfirmCancel} outline>\r\n              Confirm & cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default BasicSweetCallback\r\n","import { Fragment } from 'react'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\nimport { Row, Col } from 'reactstrap'\r\nimport SweetAlertBasic from './SweetAlertBasic'\r\nimport SweetAlertPositions from './SweetAlertPositions'\r\nimport SweetAlertAnimations from './SweetAlertAnimations'\r\nimport SweetAlertTypes from './SweetAlertTypes'\r\nimport SweetAlertOptions from './SweetAlertOptions'\r\nimport SweetAlertCallback from './SweetAlertCallback'\r\n\r\nimport 'animate.css/animate.css'\r\nimport '@styles/base/plugins/extensions/ext-component-sweet-alerts.scss'\r\n\r\nconst SweetAlert = function() {\r\n  return <>\r\n    <ExtensionsHeader\r\n      title=\"Sweet Alerts2\"\r\n      subTitle=\"A React implementation of SweetAlert2\"\r\n      link=\"https://github.com/sweetalert2/sweetalert2-react-content\"\r\n    />\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <SweetAlertBasic />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <SweetAlertPositions />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <SweetAlertAnimations />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <SweetAlertTypes />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <SweetAlertOptions />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <SweetAlertCallback />\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\n\r\nexport default SweetAlert\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n"],"sourceRoot":""}