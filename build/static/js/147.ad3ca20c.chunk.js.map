{"version":3,"sources":["views/extensions/import-export/Export.js","@core/components/extensions-header/index.js"],"names":["initialData","id","name","username","email","website","Export","tableRef","useRef","useState","data","filteredData","setFilteredData","value","setValue","modal","setModal","fileName","setFileName","fileFormat","setFileFormat","toggleModal","renderTableData","map","col","title","subTitle","link","className","sm","Ripple","color","onClick","for","bsSize","type","onChange","e","dataArr","target","length","filter","startsWithCondition","toLowerCase","startsWith","toString","includesCondition","includes","handleFilter","innerRef","responsive","isOpen","toggle","onClosed","placeholder","bookType","wb","XLSX","utils","table_to_book","current","sheet","wbout","write","bookSST","file","FileSaver","Blob","s","buf","ArrayBuffer","view","Uint8Array","i","charCodeAt","s2ab","handleExport","ExtensionsHeader","props","href","rel"],"mappings":"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","file":"static/js/147.ad3ca20c.chunk.js","sourcesContent":["import { Fragment, useState, useRef } from 'react'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\nimport XLSX from 'xlsx'\r\nimport * as FileSaver from 'file-saver'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  FormGroup,\r\n  CustomInput,\r\n  Label,\r\n} from 'reactstrap'\r\n\r\nconst initialData = [\r\n  {\r\n    id: 1,\r\n    name: 'Leanne Graham',\r\n    username: 'Bret',\r\n    email: 'Sincere@april.biz',\r\n    website: 'hildegard.org',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Ervin Howell',\r\n    username: 'Antonette',\r\n    email: 'Shanna@melissa.tv',\r\n    website: 'anastasia.net',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Clementine Bauch',\r\n    username: 'Samantha',\r\n    email: 'Nathan@yesenia.net',\r\n    website: 'ramiro.info',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Patricia Lebsack',\r\n    username: 'Karianne',\r\n    email: 'Julianne.OConner@kory.org',\r\n    website: 'kale.biz',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Chelsey Dietrich',\r\n    username: 'Kamren',\r\n    email: 'Lucio_Hettinger@annie.ca',\r\n    website: 'demarco.info',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Mrs. Dennis Schulist',\r\n    username: 'Leopoldo_Corkery',\r\n    email: 'Karley_Dach@jasper.info',\r\n    website: 'ola.org',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    username: 'Elwyn.Skiles',\r\n    email: 'Telly.Hoeger@billy.biz',\r\n    website: 'elvis.io',\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    username: 'Maxime_Nienow',\r\n    email: 'Sherwood@rosamond.me',\r\n    website: 'jacynthe.com',\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'Glenna Reichert',\r\n    username: 'Delphine',\r\n    email: 'Chaim_McDermott@dana.io',\r\n    website: 'conrad.com',\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    username: 'Moriah.Stanton',\r\n    email: 'Rey.Padberg@karina.biz',\r\n    website: 'ambrose.net',\r\n  },\r\n]\r\n\r\nconst Export = function() {\r\n  const tableRef = useRef()\r\n\r\n  const [data] = useState(initialData)\r\n  const [filteredData, setFilteredData] = useState([])\r\n  const [value, setValue] = useState('')\r\n  const [modal, setModal] = useState(false)\r\n  const [fileName, setFileName] = useState('')\r\n  const [fileFormat, setFileFormat] = useState('xlsx')\r\n\r\n  const toggleModal = () => {\r\n    setModal(!modal)\r\n  }\r\n\r\n  const handleFilter = (e) => {\r\n    const dataArr = data\r\n    let filteredData = []\r\n    const { value } = e.target\r\n    setValue(value)\r\n    if (value.length) {\r\n      filteredData = dataArr.filter((col) => {\r\n        const startsWithCondition =\r\n          col.name.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.email.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.website.toLowerCase().startsWith(value.toLowerCase()) ||\r\n          col.id.toString().toLowerCase().startsWith(value.toLowerCase())\r\n\r\n        const includesCondition =\r\n          col.name.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.email.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.website.toLowerCase().includes(value.toLowerCase()) ||\r\n          col.id.toString().toLowerCase().includes(value.toLowerCase())\r\n\r\n        if (startsWithCondition) return startsWithCondition\r\n        if (!startsWithCondition && includesCondition) return includesCondition\r\n        return null\r\n      })\r\n      setFilteredData(filteredData)\r\n      setValue(value)\r\n    }\r\n  }\r\n\r\n  const handleExport = () => {\r\n    toggleModal()\r\n    const bookType = fileFormat\r\n    const wb = XLSX.utils.table_to_book(tableRef.current, { sheet: 'Sheet JS' })\r\n    const wbout = XLSX.write(wb, { bookType, bookSST: true, type: 'binary' })\r\n\r\n    const s2ab = (s) => {\r\n      const buf = new ArrayBuffer(s.length)\r\n      const view = new Uint8Array(buf)\r\n      for (let i = 0; i < s.length; i++) view[i] = s.charCodeAt(i) & 0xff\r\n      return buf\r\n    }\r\n    const file = fileName.length\r\n      ? `${fileName}.${fileFormat}`\r\n      : `excel-sheet.${fileFormat}`\r\n\r\n    return FileSaver.saveAs(\r\n      new Blob([s2ab(wbout)], { type: 'application/octet-stream' }),\r\n      file,\r\n    )\r\n  }\r\n\r\n  const array = value ? filteredData : data\r\n  const renderTableData = array.map((col) => (\r\n    <tr key={col.id}>\r\n      <td>{col.email}</td>\r\n      <td>{col.name}</td>\r\n      <td>{col.website}</td>\r\n      <td>{col.id}</td>\r\n    </tr>\r\n  ))\r\n  return (\r\n    <>\r\n      <ExtensionsHeader\r\n        title=\"XLSX\"\r\n        subTitle=\"Xlsx is a parser and writer for various spreadsheet formats\"\r\n        link=\"https://github.com/AdeleD/react-paginate\"\r\n      />\r\n      <Row className=\"export-component\">\r\n        <Col sm=\"12\">\r\n          <Card>\r\n            <CardBody className=\"pb-0\">\r\n              <div className=\"d-flex justify-content-between flex-wrap flex-sm-row flex-column\">\r\n                <Button.Ripple color=\"primary\" onClick={() => toggleModal()}>\r\n                  Export\r\n                </Button.Ripple>\r\n                <div className=\"d-flex align-items-center justify-content-end mt-sm-0 mt-1\">\r\n                  <Label for=\"search-input\" className=\"mr-1\">\r\n                    Search\r\n                  </Label>\r\n                  <Input\r\n                    id=\"search-input\"\r\n                    bsSize=\"sm\"\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => handleFilter(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </CardBody>\r\n            <Table\r\n              innerRef={tableRef}\r\n              className=\"table-hover-animation mt-2\"\r\n              responsive\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>Email</th>\r\n                  <th>Name</th>\r\n                  <th>Website</th>\r\n                  <th>Rank</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{renderTableData}</tbody>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        isOpen={modal}\r\n        toggle={() => toggleModal()}\r\n        className=\"modal-dialog-centered\"\r\n        onClosed={() => setFileName('')}\r\n      >\r\n        <ModalHeader toggle={() => toggleModal()}>Export To Excel</ModalHeader>\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={fileName}\r\n              onChange={(e) => setFileName(e.target.value)}\r\n              placeholder=\"Enter File Name\"\r\n            />\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <CustomInput\r\n              type=\"select\"\r\n              id=\"selectFileFormat\"\r\n              name=\"customSelect\"\r\n              value={fileFormat}\r\n              onChange={(e) => setFileFormat(e.target.value)}\r\n            >\r\n              <option>xlsx</option>\r\n              <option>csv</option>\r\n              <option>txt</option>\r\n            </CustomInput>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={() => handleExport()}>\r\n            Export\r\n          </Button>\r\n          <Button color=\"flat-danger\" onClick={() => toggleModal()}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Export\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n"],"sourceRoot":""}