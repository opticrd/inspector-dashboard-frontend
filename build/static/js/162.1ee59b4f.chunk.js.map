{"version":3,"sources":["views/extensions/react-player/MediaPlayerVideo.js","views/extensions/react-player/MediaPlayerAudio.js","views/extensions/react-player/MediaPlayerControlled.js","views/extensions/react-player/index.js","@core/components/extensions-header/index.js"],"names":["MediaPlayerVideo","Card","CardHeader","CardTitle","tag","CardBody","url","className","width","controls","pad","string","slice","format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","MediaPlayerAudio","useEffect","Prism","highlightAll","audioRef","useRef","urlLink","useState","setUrl","playing","setPlaying","volume","setVolume","muted","setMuted","played","setPlayed","loaded","setLoaded","duration","setDuration","seeking","setSeeking","load","Duration","dateTime","Math","round","preDuration","preElapsed","preRemaining","Row","Col","xs","ref","height","onPlay","onPause","onSeek","e","console","log","onProgress","state","onDuration","Table","borderless","Button","variant","outline","onClick","type","min","max","step","value","onMouseDown","onChange","parseFloat","target","onMouseUp","current","seekTo","CustomInput","id","checked","Progress","toFixed","props","MediaPlayerControlledVideo","videoRef","setControls","playbackRate","setPlaybackRate","loop","setLoop","handlePlaybackRate","onEnded","config","youtube","embedOptions","color","screenfull","request","findDOMNode","active","ReactPlayer","title","subTitle","link","sm","MediaPlayerControlled","ExtensionsHeader","href","rel"],"mappings":"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","file":"static/js/162.1ee59b4f.chunk.js","sourcesContent":["import { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst MediaPlayerVideo = function() {\r\n  return <Card>\r\n    <CardHeader>\r\n      <CardTitle tag=\"h4\">Video</CardTitle>\r\n    </CardHeader>\r\n    <CardBody>\r\n      <ReactPlayer\r\n        url=\"http://youtube.com/watch?v=FCPdIvXo2rU\"\r\n        className=\"react-player-video\"\r\n        width=\"100%\"\r\n        controls\r\n      />\r\n    </CardBody>\r\n  </Card>\r\n}\r\n\r\nexport default MediaPlayerVideo\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  Progress,\r\n  CustomInput,\r\n} from 'reactstrap'\r\nimport Prism from 'prismjs'\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst pad = (string) => `0${string}`.slice(-2)\r\nconst format = (seconds) => {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nconst MediaPlayerAudio = function() {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n\r\n  const audioRef = useRef(null)\r\n\r\n  const urlLink = 'https://soundcloud.com/2ghost/we-will-rock-you'\r\n  const [url, setUrl] = useState(urlLink)\r\n  const [playing, setPlaying] = useState(false)\r\n  const [volume, setVolume] = useState(0.75)\r\n  const [muted, setMuted] = useState(false)\r\n  const [played, setPlayed] = useState(0)\r\n  const [loaded, setLoaded] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const [seeking, setSeeking] = useState(null)\r\n\r\n  const load = (url) => {\r\n    setUrl(url)\r\n    setPlayed(0)\r\n    setLoaded(0)\r\n  }\r\n  const handlePlayPause = () => setPlaying(!playing)\r\n  const handleStop = () => {\r\n    setPlaying(false)\r\n    setUrl(null)\r\n  }\r\n  const handleVolumeChange = (e) => setVolume(parseFloat(e.target.value))\r\n  const handleToggleMuted = () => setMuted(!muted)\r\n  const handlePlay = () => setPlaying(true)\r\n  const handlePause = () => setPlaying(false)\r\n  const handleSeekMouseDown = () => setSeeking(true)\r\n  const handleSeekChange = (e) => {\r\n    setPlayed(parseFloat(e.target.value))\r\n  }\r\n  const handleSeekMouseUp = (e) => {\r\n    setSeeking(false)\r\n    audioRef.current.seekTo(parseFloat(e.target.value))\r\n  }\r\n  const handleProgress = (state) => {\r\n    if (!seeking) {\r\n      setPlayed(state.played)\r\n      setLoaded(state.loaded)\r\n    }\r\n  }\r\n  const handleDuration = (duration) => setDuration(duration)\r\n  useEffect(() => {\r\n    if (url === null) {\r\n      load(urlLink)\r\n    }\r\n  })\r\n\r\n  // for duration, elapsed and remaining time\r\n  const Duration = function({ className, seconds }) {\r\n  return <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n      {format(seconds)}\r\n    </time>\r\n}\r\n  const preDuration = <Duration seconds={duration} />\r\n  const preElapsed = <Duration seconds={duration * played} />\r\n  const preRemaining = <Duration seconds={duration * (1 - played)} />\r\n\r\n  return (\r\n    <Card className=\"overflow-hidden\">\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Audio</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <ReactPlayer\r\n              ref={audioRef}\r\n              url={url}\r\n              className=\"react-player-audio\"\r\n              width=\"500px\"\r\n              height=\"290px\"\r\n              playing={playing}\r\n              volume={volume}\r\n              muted={muted}\r\n              onPlay={handlePlay}\r\n              onPause={handlePause}\r\n              onSeek={(e) => console.log('onSeek', e)}\r\n              onProgress={handleProgress}\r\n              onDuration={handleDuration}\r\n            />\r\n          </Col>\r\n          <Col xs={12}>\r\n            <Table borderless className=\"mt-2\">\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"text-right\">Controls</td>\r\n                  <td>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      outline\r\n                      onClick={handleStop}\r\n                      className=\"my-25 mr-50\"\r\n                    >\r\n                      Stop\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"primary\"\r\n                      outline\r\n                      onClick={handlePlayPause}\r\n                      className=\"my-25\"\r\n                    >\r\n                      {playing ? 'Pause' : 'Play'}\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-right\">Seek</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"range\"\r\n                      min={0}\r\n                      max={0.999999}\r\n                      step=\"any\"\r\n                      value={played}\r\n                      onMouseDown={handleSeekMouseDown}\r\n                      onChange={handleSeekChange}\r\n                      onMouseUp={handleSeekMouseUp}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-right\">Volume</td>\r\n                  <td>\r\n                    <input\r\n                      type=\"range\"\r\n                      min={0}\r\n                      max={1}\r\n                      step=\"any\"\r\n                      value={volume}\r\n                      onChange={handleVolumeChange}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-right\">Muted</td>\r\n                  <td>\r\n                    <CustomInput\r\n                      type=\"checkbox\"\r\n                      id=\"audioMuted\"\r\n                      checked={muted}\r\n                      onChange={handleToggleMuted}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-right\">Played</td>\r\n                  <td>\r\n                    <Progress value={played} max={1} />\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className=\"text-right\">Loaded</td>\r\n                  <td>\r\n                    <Progress value={loaded} max={1} />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <pre className=\"language-js\">\r\n              <code className=\"language-js\">\r\n                {`state={\r\n  playing: ${playing},\r\n  volume: ${volume.toFixed(2)},\r\n  played: ${played.toFixed(2)},\r\n  loaded: ${loaded.toFixed(2)},\r\n  duration: ${format(preDuration.props.seconds)},\r\n  elapsed: ${format(preElapsed.props.seconds)},\r\n  remaining: ${format(preRemaining.props.seconds)}\r\n}\r\n`}\r\n              </code>\r\n            </pre>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MediaPlayerAudio\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport { findDOMNode } from 'react-dom'\r\nimport {\r\n  Card,\r\n  CardTitle,\r\n  CardHeader,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  Progress,\r\n  CustomInput,\r\n} from 'reactstrap'\r\nimport Prism from 'prismjs'\r\nimport ReactPlayer from 'react-player'\r\nimport screenfull from 'screenfull'\r\n\r\nconst pad = (string) => `0${string}`.slice(-2)\r\nconst format = (seconds) => {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nconst MediaPlayerControlledVideo = function() {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n\r\n  const videoRef = useRef(null)\r\n\r\n  const urlLink = 'http://youtube.com/watch?v=FCPdIvXo2rU'\r\n  const [url, setUrl] = useState(urlLink)\r\n  const [playing, setPlaying] = useState(false)\r\n  const [controls, setControls] = useState(false)\r\n  const [volume, setVolume] = useState(0.75)\r\n  const [muted, setMuted] = useState(false)\r\n  const [played, setPlayed] = useState(0)\r\n  const [loaded, setLoaded] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const [playbackRate, setPlaybackRate] = useState(1.0)\r\n  const [loop, setLoop] = useState(false)\r\n  const [seeking, setSeeking] = useState(null)\r\n\r\n  const load = (url) => {\r\n    setUrl(url)\r\n    setPlayed(0)\r\n    setLoaded(0)\r\n  }\r\n  const handlePlayPause = () => setPlaying(!playing)\r\n  const handleStop = () => {\r\n    setPlaying(false)\r\n    setUrl(null)\r\n  }\r\n  const handleToggleControls = () => {\r\n    setControls(!controls)\r\n    setUrl(null)\r\n  }\r\n  useEffect(() => {\r\n    if (url === null) {\r\n      load(urlLink)\r\n    }\r\n  })\r\n  const handleToggleLoop = () => setLoop(!loop)\r\n  const handleVolumeChange = (e) => setVolume(parseFloat(e.target.value))\r\n  const handleToggleMuted = () => setMuted(!muted)\r\n  const handlePlaybackRate = (e) => setPlaybackRate(parseFloat(e.target.value))\r\n  const handlePlay = () => setPlaying(true)\r\n  const handlePause = () => setPlaying(false)\r\n  const handleSeekMouseDown = () => setSeeking(true)\r\n  const handleSeekChange = (e) => {\r\n    setPlayed(parseFloat(e.target.value))\r\n  }\r\n  const handleSeekMouseUp = (e) => {\r\n    setSeeking(false)\r\n    videoRef.current.seekTo(parseFloat(e.target.value))\r\n  }\r\n  const handleProgress = (state) => {\r\n    if (!seeking) {\r\n      setPlayed(state.played)\r\n      setLoaded(state.loaded)\r\n    }\r\n  }\r\n  const handleEnded = () => setPlaying(loop)\r\n  const handleDuration = (duration) => setDuration(duration)\r\n  const handleFullscreen = () => {\r\n    screenfull.request(findDOMNode(videoRef.current))\r\n  }\r\n\r\n  // for duration, elapsed and remaining time\r\n  const Duration = function({ className, seconds }) {\r\n  return <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n      {format(seconds)}\r\n    </time>\r\n}\r\n  const preDuration = <Duration seconds={duration} />\r\n  const preElapsed = <Duration seconds={duration * played} />\r\n  const preRemaining = <Duration seconds={duration * (1 - played)} />\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Controlled Video</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <ReactPlayer\r\n              ref={videoRef}\r\n              url={url}\r\n              className=\"react-player-video\"\r\n              width=\"100%\"\r\n              playing={playing}\r\n              controls={controls}\r\n              loop={loop}\r\n              playbackRate={playbackRate}\r\n              volume={volume}\r\n              muted={muted}\r\n              onPlay={handlePlay}\r\n              onPause={handlePause}\r\n              onEnded={handleEnded}\r\n              onProgress={handleProgress}\r\n              onDuration={handleDuration}\r\n              config={{\r\n                youtube: {\r\n                  embedOptions: {\r\n                    'allow-same-origin': true,\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n      <Table borderless>\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"text-right\">Controls</td>\r\n            <td>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handleStop}\r\n                className=\"my-25 mr-50\"\r\n              >\r\n                Stop\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handlePlayPause}\r\n                className=\"my-25 mr-50\"\r\n              >\r\n                {playing ? 'Pause' : 'Play'}\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handleFullscreen}\r\n                className=\"my-25\"\r\n              >\r\n                Fullscreen\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Speed</td>\r\n            <td>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handlePlaybackRate}\r\n                value={1}\r\n                className=\"my-25 mr-50\"\r\n                active={playbackRate === 1}\r\n              >\r\n                1x\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handlePlaybackRate}\r\n                value={1.5}\r\n                className=\"my-25 mr-50\"\r\n                active={playbackRate === 1.5}\r\n              >\r\n                1.5x\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                outline\r\n                onClick={handlePlaybackRate}\r\n                value={2}\r\n                active={playbackRate === 2}\r\n              >\r\n                2x\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Seek</td>\r\n            <td>\r\n              <input\r\n                type=\"range\"\r\n                min={0}\r\n                max={0.999999}\r\n                step=\"any\"\r\n                value={played}\r\n                onMouseDown={handleSeekMouseDown}\r\n                onChange={handleSeekChange}\r\n                onMouseUp={handleSeekMouseUp}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Volume</td>\r\n            <td>\r\n              <input\r\n                type=\"range\"\r\n                min={0}\r\n                max={1}\r\n                step=\"any\"\r\n                value={volume}\r\n                onChange={handleVolumeChange}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Controls</td>\r\n            <td>\r\n              <CustomInput\r\n                type=\"checkbox\"\r\n                id=\"videoControls\"\r\n                checked={controls}\r\n                onChange={handleToggleControls}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Muted</td>\r\n            <td>\r\n              <CustomInput\r\n                type=\"checkbox\"\r\n                id=\"videoMuted\"\r\n                checked={muted}\r\n                onChange={handleToggleMuted}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Loop</td>\r\n            <td>\r\n              <CustomInput\r\n                type=\"checkbox\"\r\n                id=\"videoLoop\"\r\n                checked={loop}\r\n                onChange={handleToggleLoop}\r\n              />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Played</td>\r\n            <td>\r\n              <Progress value={played} max={1} />\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"text-right\">Loaded</td>\r\n            <td>\r\n              <Progress value={loaded} max={1} />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <pre className=\"language-js\">\r\n              <code className=\"language-js\">\r\n                {`state={\r\n  playing: ${playing},\r\n  volume: ${volume.toFixed(2)},\r\n  played: ${played.toFixed(2)},\r\n  loaded: ${loaded.toFixed(2)},\r\n  duration: ${format(preDuration.props.seconds)},\r\n  elapsed: ${format(preElapsed.props.seconds)},\r\n  remaining: ${format(preRemaining.props.seconds)}\r\n}\r\n`}\r\n              </code>\r\n            </pre>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default MediaPlayerControlledVideo\r\n","import { Fragment } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\nimport MediaPlayerVideo from './MediaPlayerVideo'\r\nimport MediaPlayerAudio from './MediaPlayerAudio'\r\nimport MediaPlayerControlled from './MediaPlayerControlled'\r\n\r\nconst ReactPlayer = function() {\r\n  return <>\r\n    <ExtensionsHeader\r\n      title=\"React Player\"\r\n      subTitle=\"React Media Player\"\r\n      link=\"https://github.com/CookPete/react-player\"\r\n    />\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <MediaPlayerVideo />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <MediaPlayerControlled />\r\n      </Col>\r\n      <Col sm=\"12\">\r\n        <MediaPlayerAudio />\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\n\r\nexport default ReactPlayer\r\n","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n"],"sourceRoot":""}