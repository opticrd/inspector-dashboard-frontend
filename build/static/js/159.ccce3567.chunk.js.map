{"version":3,"sources":["views/forms/form-elements/input-mask/PhoneMask.js","views/forms/form-elements/input-mask/DateMask.js","views/forms/form-elements/input-mask/TimeMask.js","views/forms/form-elements/input-mask/BlocksMask.js","views/forms/form-elements/input-mask/PrefixMask.js","views/forms/form-elements/input-mask/DelimitersMask.js","views/forms/form-elements/input-mask/CreditCardMask.js","views/forms/form-elements/input-mask/CustomDelimitersMask.js","views/forms/form-elements/input-mask/NumeralFormattingMask.js","views/forms/form-elements/input-mask/index.js","@core/components/breadcrumbs/index.js"],"names":["PhoneMask","htmlFor","InputGroup","className","InputGroupAddon","addonType","InputGroupText","placeholder","options","phone","phoneRegionCode","id","DateMask","date","delimiter","datePattern","TimeMask","time","timePattern","BlocksMask","blocks","uppercase","PrefixMask","prefix","DelimitersMask","CreditCardMask","creditCard","CustomDelimitersMask","delimiters","NumeralFormattingMask","numeral","numeralThousandsGroupStyle","InputMask","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","Card","CardHeader","CardTitle","tag","CardBody","xl","md","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","to","active","color","size","right","Link"],"mappings":"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","file":"static/js/159.ccce3567.chunk.js","sourcesContent":["import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\nimport 'cleave.js/dist/addons/cleave-phone.us'\r\nimport { InputGroup, InputGroupAddon, InputGroupText } from 'reactstrap'\r\n\r\nconst PhoneMask = function() {\r\n  const options = { phone: true, phoneRegionCode: 'US' }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"phone-number\">Phone Number</label>\r\n      <InputGroup className=\"input-group-merge\">\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>US (+1)</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Cleave\r\n          className=\"form-control\"\r\n          placeholder=\"1 234 567 8900\"\r\n          options={options}\r\n          id=\"phone-number\"\r\n        />\r\n      </InputGroup>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PhoneMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst DateMask = function() {\r\n  const options = { date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"date\">Date</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"2001-01-01\"\r\n        options={options}\r\n        id=\"date\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DateMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst TimeMask = function() {\r\n  const options = { time: true, timePattern: ['h', 'm', 's'] }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"time\">Time</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"12:00:00\"\r\n        options={options}\r\n        id=\"time\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TimeMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst BlocksMask = function() {\r\n  const options = { blocks: [4, 3, 3], uppercase: true }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"blocks\">Blocks</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"Blocks [4, 3, 3]\"\r\n        options={options}\r\n        id=\"blocks\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BlocksMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst PrefixMask = function() {\r\n  const options = { prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"prefix\">Prefix</label>\r\n      <Cleave className=\"form-control\" options={options} id=\"prefix\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PrefixMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst DelimitersMask = function() {\r\n  const options = { delimiter: 'Â·', blocks: [3, 3, 3], uppercase: true }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"delimiters\">Delimiters</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"Delimiter: '.'\"\r\n        options={options}\r\n        id=\"delimiters\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DelimitersMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst CreditCardMask = function() {\r\n  const options = { creditCard: true }\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"credit-card\">Credit Card</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"0000 0000 0000 0000\"\r\n        options={options}\r\n        id=\"credit-card\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreditCardMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst CustomDelimitersMask = function() {\r\n  const options = {\r\n    delimiters: ['.', '.', '-'],\r\n    blocks: [3, 3, 3, 2],\r\n    uppercase: true,\r\n  }\r\n  return (\r\n    <>\r\n      <label htmlFor=\"custom-delimiters\">Custom Delimiters</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"Delimiter: ['.', '.', '-']\"\r\n        options={options}\r\n        id=\"custom-delimiters\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CustomDelimitersMask\r\n","import { Fragment } from 'react'\r\nimport Cleave from 'cleave.js/react'\r\n\r\nconst NumeralFormattingMask = function() {\r\n  const options = { numeral: true, numeralThousandsGroupStyle: 'thousand' }\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"numeral-formatting\">Numeral Formatting</label>\r\n      <Cleave\r\n        className=\"form-control\"\r\n        placeholder=\"10,000\"\r\n        options={options}\r\n        id=\"numeral-formatting\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NumeralFormattingMask\r\n","import { Fragment } from 'react'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport { Row, Col, Card, CardBody, CardTitle, CardHeader } from 'reactstrap'\r\nimport PhoneMask from './PhoneMask'\r\nimport DateMask from './DateMask'\r\nimport TimeMask from './TimeMask'\r\nimport BlocksMask from './BlocksMask'\r\nimport PrefixMask from './PrefixMask'\r\nimport DelimitersMask from './DelimitersMask'\r\nimport CreditCardMask from './CreditCardMask'\r\nimport CustomDelimitersMask from './CustomDelimitersMask'\r\nimport NumeralFormattingMask from './NumeralFormattingMask'\r\n\r\nconst InputMask = function() {\r\n  return <>\r\n    <Breadcrumbs\r\n      breadCrumbTitle=\"Input Mask\"\r\n      breadCrumbParent=\"Form Elements\"\r\n      breadCrumbActive=\"Input Mask\"\r\n    />\r\n    <Row>\r\n      <Col sm=\"12\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle tag=\"h4\">Input Masks</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col className=\"mb-2\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                <CreditCardMask />\r\n              </Col>\r\n              <Col className=\"mb-2\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                <PhoneMask />\r\n              </Col>\r\n              <Col className=\"mb-2\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                <DateMask />\r\n              </Col>\r\n              <Col className=\"mb-2\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                <TimeMask />\r\n              </Col>\r\n              <Col className=\"mb-2\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                <NumeralFormattingMask />\r\n              </Col>\r\n              <Col className=\"mb-2\" xl=\"4\" md=\"6\" sm=\"12\">\r\n                <BlocksMask />\r\n              </Col>\r\n              <Col xl=\"4\" md=\"6\" sm=\"12\">\r\n                <DelimitersMask />\r\n              </Col>\r\n              <Col xl=\"4\" md=\"6\" sm=\"12\">\r\n                <CustomDelimitersMask />\r\n              </Col>\r\n              <Col xl=\"4\" md=\"6\" sm=\"12\">\r\n                <PrefixMask />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </>\r\n}\r\nexport default InputMask\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n"],"sourceRoot":""}