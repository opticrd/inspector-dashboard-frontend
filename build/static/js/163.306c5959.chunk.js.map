{"version":3,"sources":["views/pages/authentication/LoginV2.js","@core/components/input-password-toggle/index.js"],"names":["LoginV2","useSkin","skin","illustration","source","require","default","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","onSubmit","for","type","placeholder","autoFocus","label","Ripple","color","block","size","InputPasswordToggle","props","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","useState","inputVisibility","setInputVisibility","classnames","addonType","renderIcon","defaultProps"],"mappings":"gVAwLeA,UAtKC,WACd,MAAwBC,cAAxB,mBAAOC,EAAP,KAEMC,GAFN,KAE8B,SAATD,EAAkB,oBAAsB,gBACvDE,EAASC,OAAQ,YAA4BF,IAAgBG,QAEnE,OACE,qBAAKC,UAAU,uBAAf,SACE,eAAC,IAAD,CAAKA,UAAU,iBAAf,UACE,eAAC,IAAD,CAAMA,UAAU,aAAaC,GAAG,IAAIC,QAAS,SAACC,GAAD,OAAOA,EAAEC,kBAAtD,UACE,sBAAKC,QAAQ,aAAaC,QAAQ,MAAMC,OAAO,KAA/C,UACE,iCACE,iCACEC,GAAG,OACHC,GAAG,cACHC,GAAG,MACHC,GAAG,cACHC,GAAG,mBALL,UAOE,sBAAMC,UAAU,UAAUC,OAAO,OACjC,sBAAMD,UAAU,UAAUC,OAAO,YAEnC,iCACEN,GAAG,cACHC,GAAG,cACHC,GAAG,aACHC,GAAG,OACHC,GAAG,mBALL,UAOE,sBAAMC,UAAU,UAAUE,YAAY,IAAID,OAAO,OACjD,sBAAMD,UAAU,UAAUC,OAAO,eAGrC,mBACEF,GAAG,SACHI,OAAO,OACPC,YAAY,IACZC,KAAK,OACLC,SAAS,UALX,SAOE,mBAAGP,GAAG,WAAWQ,UAAU,sCAA3B,SACE,oBAAGR,GAAG,QAAQQ,UAAU,oCAAxB,UACE,sBACEC,EAAE,weACFT,GAAG,OACHZ,UAAU,eACVsB,MAAO,CAAEJ,KAAM,kBAEjB,sBACEG,EAAE,kTACFT,GAAG,OACHM,KAAK,yBACLK,QAAQ,QAEV,yBACEX,GAAG,SACHM,KAAK,UACLK,QAAQ,cACRC,OAAO,sEAET,yBACEZ,GAAG,SACHM,KAAK,UACLK,QAAQ,cACRC,OAAO,sEAET,yBACEZ,GAAG,SACHM,KAAK,yBACLK,QAAQ,cACRC,OAAO,uEAMjB,oBAAIxB,UAAU,+BAAd,sBAEF,cAAC,IAAD,CAAKA,UAAU,0CAA0CyB,GAAG,IAAIC,GAAG,KAAnE,SACE,qBAAK1B,UAAU,iEAAf,SACE,qBAAKA,UAAU,YAAY2B,IAAK9B,EAAQ+B,IAAI,iBAGhD,cAAC,IAAD,CACE5B,UAAU,gDACVyB,GAAG,IACHC,GAAG,KAHL,SAKE,eAAC,IAAD,CAAK1B,UAAU,kBAAkB0B,GAAG,IAAIG,GAAG,IAAIJ,GAAG,KAAlD,UACE,cAAC,IAAD,CAAWK,IAAI,KAAK9B,UAAU,wBAA9B,4CAGA,cAAC,IAAD,CAAUA,UAAU,OAApB,oEAGA,eAAC,IAAD,CACEA,UAAU,uBACV+B,SAAU,SAAC5B,GAAD,OAAOA,EAAEC,kBAFrB,UAIE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,UAAU,aAAagC,IAAI,cAAlC,mBAGA,cAAC,IAAD,CACEC,KAAK,QACLrB,GAAG,cACHsB,YAAY,mBACZC,WAAS,OAGb,eAAC,IAAD,WACE,sBAAKnC,UAAU,iCAAf,UACE,cAAC,IAAD,CAAOA,UAAU,aAAagC,IAAI,iBAAlC,sBAGA,cAAC,IAAD,CAAM/B,GAAG,4BAAT,SACE,0DAGJ,cAAC,IAAD,CACED,UAAU,oBACVY,GAAG,sBAGP,cAAC,IAAD,UACE,cAAC,IAAD,CACEqB,KAAK,WACLjC,UAAU,yBACVY,GAAG,cACHwB,MAAM,kBAGV,cAAC,IAAOC,OAAR,CAAeC,MAAM,UAAUC,OAAK,EAApC,wBAIF,oBAAGvC,UAAU,mBAAb,UACE,sBAAMA,UAAU,QAAhB,kCACA,cAAC,IAAD,CAAMC,GAAG,qBAAT,SACE,0DAGJ,qBAAKD,UAAU,eAAf,SACE,qBAAKA,UAAU,eAAf,kBAEF,sBAAKA,UAAU,gDAAf,UACE,cAAC,IAAOqC,OAAR,CAAeC,MAAM,WAArB,SACE,cAAC,IAAD,CAAUE,KAAM,OAElB,cAAC,IAAOH,OAAR,CAAeC,MAAM,UAArB,SACE,cAAC,IAAD,CAASE,KAAM,OAEjB,cAAC,IAAOH,OAAR,CAAeC,MAAM,SAArB,SACE,cAAC,IAAD,CAAME,KAAM,OAEd,cAAC,IAAOH,OAAR,CAAerC,UAAU,OAAOsC,MAAM,SAAtC,SACE,cAAC,IAAD,CAAQE,KAAM,sB,6QCrKxBC,EAAsB,SAAAC,GAE1B,IACEN,EAUEM,EAVFN,MACAO,EASED,EATFC,SACAC,EAQEF,EARFE,SACAC,EAOEH,EAPFG,QACA7C,EAME0C,EANF1C,UACA8C,EAKEJ,EALFI,QACAZ,EAIEQ,EAJFR,YACAa,EAGEL,EAHFK,SACAC,EAEEN,EAFFM,eACGC,EAVL,YAWIP,EAXJ,GAcA,EAA8CQ,mBAASL,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KAaA,OACE,eAAC,WAAD,WACGhB,EAAQ,cAAC,IAAD,CAAOJ,IAAKc,EAAZ,SAAsBV,IAAiB,KAChD,eAAC,IAAD,CACEpC,UAAWqD,IAAW,eACnBrD,EAAYA,IAFjB,UAKE,cAAC,IAAD,yBACEiC,MAA0B,IAApBkB,EAA4B,WAAa,OAC/CjB,YAAaA,GAA4B,mDACzClC,UAAWqD,IAAW,eACnBL,EAAiBA,KAGfZ,GAASU,EACV,CACElC,GAAIkC,GAEN,IACAG,IAGN,cAAC,IAAD,CAAiBK,UAAU,SAASpD,QAAS,kBAAMkD,GAAoBD,IAAvE,SACE,cAAC,IAAD,CAAgBnD,UAAU,iBAA1B,SAlCW,WACjB,IAAMwC,EAAOO,GAAsB,GAEnC,OAAwB,IAApBI,EACKR,GAAsB,cAAC,IAAD,CAAKH,KAAMA,IAEjCI,GAAsB,cAAC,IAAD,CAAQJ,KAAMA,IA4BKe,cAOvCd,MA0BfA,EAAoBe,aAAe,CACjCX,SAAS","file":"static/js/163.306c5959.chunk.js","sourcesContent":["import { useSkin } from '@hooks/useSkin'\r\nimport { Link } from 'react-router-dom'\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport {\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardText,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  CustomInput,\r\n  Button,\r\n} from 'reactstrap'\r\nimport '@styles/base/pages/page-auth.scss'\r\n\r\nconst LoginV2 = function() {\r\n  const [skin, setSkin] = useSkin()\r\n\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg'\r\n  const source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  return (\r\n    <div className=\"auth-wrapper auth-v2\">\r\n      <Row className=\"auth-inner m-0\">\r\n        <Link className=\"brand-logo\" to=\"/\" onClick={(e) => e.preventDefault()}>\r\n          <svg viewBox=\"0 0 139 95\" version=\"1.1\" height=\"28\">\r\n            <defs>\r\n              <linearGradient\r\n                x1=\"100%\"\r\n                y1=\"10.5120544%\"\r\n                x2=\"50%\"\r\n                y2=\"89.4879456%\"\r\n                id=\"linearGradient-1\"\r\n              >\r\n                <stop stopColor=\"#000000\" offset=\"0%\" />\r\n                <stop stopColor=\"#FFFFFF\" offset=\"100%\" />\r\n              </linearGradient>\r\n              <linearGradient\r\n                x1=\"64.0437835%\"\r\n                y1=\"46.3276743%\"\r\n                x2=\"37.373316%\"\r\n                y2=\"100%\"\r\n                id=\"linearGradient-2\"\r\n              >\r\n                <stop stopColor=\"#EEEEEE\" stopOpacity=\"0\" offset=\"0%\" />\r\n                <stop stopColor=\"#FFFFFF\" offset=\"100%\" />\r\n              </linearGradient>\r\n            </defs>\r\n            <g\r\n              id=\"Page-1\"\r\n              stroke=\"none\"\r\n              strokeWidth=\"1\"\r\n              fill=\"none\"\r\n              fillRule=\"evenodd\"\r\n            >\r\n              <g id=\"Artboard\" transform=\"translate(-400.000000, -178.000000)\">\r\n                <g id=\"Group\" transform=\"translate(400.000000, 178.000000)\">\r\n                  <path\r\n                    d=\"M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z\"\r\n                    id=\"Path\"\r\n                    className=\"text-primary\"\r\n                    style={{ fill: 'currentColor' }}\r\n                   />\r\n                  <path\r\n                    d=\"M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z\"\r\n                    id=\"Path\"\r\n                    fill=\"url(#linearGradient-1)\"\r\n                    opacity=\"0.2\"\r\n                   />\r\n                  <polygon\r\n                    id=\"Path-2\"\r\n                    fill=\"#000000\"\r\n                    opacity=\"0.049999997\"\r\n                    points=\"69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325\"\r\n                   />\r\n                  <polygon\r\n                    id=\"Path-2\"\r\n                    fill=\"#000000\"\r\n                    opacity=\"0.099999994\"\r\n                    points=\"69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338\"\r\n                   />\r\n                  <polygon\r\n                    id=\"Path-3\"\r\n                    fill=\"url(#linearGradient-2)\"\r\n                    opacity=\"0.099999994\"\r\n                    points=\"101.428699 0 83.0667527 94.1480575 130.378721 47.0740288\"\r\n                   />\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2 className=\"brand-text text-primary ml-1\">Vuexy</h2>\r\n        </Link>\r\n        <Col className=\"d-none d-lg-flex align-items-center p-5\" lg=\"8\" sm=\"12\">\r\n          <div className=\"w-100 d-lg-flex align-items-center justify-content-center px-5\">\r\n            <img className=\"img-fluid\" src={source} alt=\"Login V2\" />\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          className=\"d-flex align-items-center auth-bg px-2 p-lg-5\"\r\n          lg=\"4\"\r\n          sm=\"12\"\r\n        >\r\n          <Col className=\"px-xl-2 mx-auto\" sm=\"8\" md=\"6\" lg=\"12\">\r\n            <CardTitle tag=\"h2\" className=\"font-weight-bold mb-1\">\r\n              Welcome to Vuexy! ðŸ‘‹\r\n            </CardTitle>\r\n            <CardText className=\"mb-2\">\r\n              Please sign-in to your account and start the adventure\r\n            </CardText>\r\n            <Form\r\n              className=\"auth-login-form mt-2\"\r\n              onSubmit={(e) => e.preventDefault()}\r\n            >\r\n              <FormGroup>\r\n                <Label className=\"form-label\" for=\"login-email\">\r\n                  Email\r\n                </Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"login-email\"\r\n                  placeholder=\"john@example.com\"\r\n                  autoFocus\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Label className=\"form-label\" for=\"login-password\">\r\n                    Password\r\n                  </Label>\r\n                  <Link to=\"/pages/forgot-password-v2\">\r\n                    <small>Forgot Password?</small>\r\n                  </Link>\r\n                </div>\r\n                <InputPasswordToggle\r\n                  className=\"input-group-merge\"\r\n                  id=\"login-password\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <CustomInput\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-Primary\"\r\n                  id=\"remember-me\"\r\n                  label=\"Remember Me\"\r\n                />\r\n              </FormGroup>\r\n              <Button.Ripple color=\"primary\" block>\r\n                Sign in\r\n              </Button.Ripple>\r\n            </Form>\r\n            <p className=\"text-center mt-2\">\r\n              <span className=\"mr-25\">New on our platform?</span>\r\n              <Link to=\"/pages/register-v2\">\r\n                <span>Create an account</span>\r\n              </Link>\r\n            </p>\r\n            <div className=\"divider my-2\">\r\n              <div className=\"divider-text\">or</div>\r\n            </div>\r\n            <div className=\"auth-footer-btn d-flex justify-content-center\">\r\n              <Button.Ripple color=\"facebook\">\r\n                <Facebook size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple color=\"twitter\">\r\n                <Twitter size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple color=\"google\">\r\n                <Mail size={14} />\r\n              </Button.Ripple>\r\n              <Button.Ripple className=\"mr-0\" color=\"github\">\r\n                <GitHub size={14} />\r\n              </Button.Ripple>\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginV2\r\n","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}