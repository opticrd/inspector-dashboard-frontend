{"version":3,"sources":["views/dashboard/analytics/CardBrowserState.js","views/dashboard/analytics/GoalOverview.js","views/dashboard/analytics/AvgSessions.js","services/strapi/dashboard/index.js","views/dashboard/analytics/index.js","views/dashboard/analytics/dataInfoChart.js","configs/axios.js","constants/api/zammadApi.js","constants/api/strapiApi.js","@core/components/sweetAlert/index.js","constants/api/territoriesApi.js","@core/components/spinner/Loading-spinner.js","services/zammad/group/index.js","services/zammad/user/index.js","@core/components/spinner/loadingData.js","redux/actions/zammad/users/index.js","redux/actions/territories/municipalities/index.js","constants/Status/statusTickets.js","redux/actions/zammad/organizations/index.js","@core/components/widgets/stats/StatsWithAreaChart.js","redux/actions/territories/provinces/index.js","@core/components/widgets/stats/TinyChartStats.js","redux/actions/zammad/tickets/index.js"],"names":["CardBrowserState","institutionWithTickets","loadingTicket","Card","className","CardHeader","CardTitle","tag","CardBody","style","height","map","data","Media","attributes","acronym","name","tickets","length","id","GoalOverview","notCloseTickets","endTickets","success","options","chart","sparkline","enabled","dropShadow","blur","left","top","opacity","colors","plotOptions","radialBar","offsetY","startAngle","endAngle","hollow","size","track","background","strokeWidth","dataLabels","show","value","color","fontFamily","fontSize","fontWeight","fill","type","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","lineCap","grid","padding","bottom","ticketsClosed","ticketsNoClosed","series","parseInt","Row","Col","xs","CardText","AvgSessions","priorityLowTickets","priorityNormalTickets","priorityHighTickets","lowPriority","normalPriority","highPriority","totalPriority","toolbar","right","states","hover","filter","main","warning","danger","bar","columnWidth","distributed","endingShape","tooltip","x","xaxis","sm","order","width","md","Progress","strapiGetTicketsTotal","a","strapiAxios","get","strapiApi","dashboard","total","strapiGetTicketsOpen","open","strapiGetTicketsEnd","end","strapiGetTicketsNotClose","notClose","strapiGetTicketsPriorityLow","priorityLow","strapiGetTicketsPriorityNormal","priorityNormal","strapiGetTicketsPriorityHigh","priorityHigh","strapiGetInstitutionWithTickets","strapiGetUsersActive","usersActive","AnalyticsDashboard","useContext","ThemeColors","useState","totalTickets","setTotalTickets","openTickets","setOpenTickets","setEndTickets","setNotCloseTickets","setPriorityLowTickets","setPriorityNormalTickets","setpriorityHighTickets","setInstitutionWithTickets","console","log","setUsersActive","useEffect","then","res","meta","pagination","infoChart","icon","colorHEX","quantity","title","secondary","primary","dataInfoChart","index","lg","StatsWithAreaChart","kFormatter","accessToken","JSON","parse","localStorage","getItem","zammadAxios","axios","create","baseURL","process","headers","authorization","territoriesAxios","incidentsAxios","interceptors","request","use","config","token","jwt","Authorization","error","response","status","clear","window","location","href","zammadApi","ticketById","allTickets","ticketsByDate","ticketsByState","ticketsByGroup","ticketPriorities","ticketStates","postTags","tagsByName","postTicketTags","ticketTags","ticketArticles","postTicketArticles","ticketArticlesAttachment","users","userMe","userById","userByCedula","allUsers","allRols","organizations","organizationsByAcronym","groups","auth","login","beneficiaries","beneficiary","valueSearch","pageNumber","beneficiaryPost","beneficiaryId","beneficiaryByCedula","user","valueZone","userPost","userId","userImport","ticket","ticketPopulate","ticketPost","ticketId","ticketImport","institutions","institution","institutionPost","institutionId","institutionByIdService","idService","services","all","serviceId","service","category","subCategory","comments","comment","uploads","upload","MySwal","withReactContent","Swal","sweetAlert","text","fire","customClass","confirmButton","buttonsStyling","sweetAlertError","sweetAlertGood","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","territoriesApi","regions","provinces","municipalities","regionByIdentifier","provinceByIdentifier","municipalityByIdentifier","districtByIdentifier","sectionByIdentifier","neighborhoodByIdentifier","subNeighborhoodByIdentifier","provincesByRegion","municipalitiesByprovincesByRegions","idRegions","idProvinces","districtByIdProvinceByIdMunicipality","idMunicipality","sectionByIdMunicipalityByIdDistrict","idDistrict","neighborhoodByIdDistrictByIdSection","idSection","subNeighborhoodByIdSectionByIdNeighborhood","idNeighborhood","ComponentSpinner","postGroup","post","getGroups","postUser","dataObj","putUser","put","getUserMe","getUserByCedula","LoadingData","getMunicipalitiesByprovincesByRegionsActions","dispatch","territoriesTypes","GET_MUNICIPALITIES_BY_PROVINCES_BY_REGIONS","payload","cleanSelectMunicipalities","CLEAN_SELECT_MUNICIPALITIES","statusTicketsObj","new","idN","label","pending_reminder","closed","merged","removed","statusTicketsArray","props","newDataTableTicketsTwo","curve","labels","axisBorder","yaxis","classnames","getProvincesByRegionActions","GET_PROVINCES_BY_REGION","cleanSelectProvinces","CLEAN_SELECT_PROVINCES","TinyChartStats","stacked","horizontal","startingShape","backgroundBarColors","backgroundBarRadius","legend","axisTicks"],"mappings":"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","file":"static/js/40.6d9b55d0.chunk.js","sourcesContent":["import { MoreVertical } from 'react-feather'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  Media,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from 'reactstrap'\r\nimport LoadingData from '../../../@core/components/spinner/loadingData'\r\n\r\nconst CardBrowserState = function ({ institutionWithTickets, loadingTicket }) {\r\n\r\n  return (\r\n    <Card className=\"card-browser-states\">\r\n      <CardHeader className=\"pb-0\">\r\n        <div className=\"flex-grow-1\">\r\n          <CardTitle tag=\"h4\" className=\"mb-1\">\r\n            Instituciones\r\n          </CardTitle>\r\n        </div>\r\n        <div>{/* <p className=\"text-muted\">Últimos 28 días</p> */}</div>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <div className=\"overflow-auto\" style={{ height: '310px' }}>\r\n          {institutionWithTickets.map(data => (\r\n            <div key={data.id} className=\"browser-states\">\r\n              <div className=\"flex-grow-1\">\r\n                <Media>\r\n                  {/* <img\r\n                className=\"rounded mr-1\"\r\n                src={require('@src/assets/images/icons/1.png').default}\r\n                height=\"30\"\r\n                alt={state.acronimo}\r\n              /> */}\r\n                  <h6 className=\"align-self-center text-primary mb-0\">\r\n                    {data.attributes.acronym}\r\n                  </h6>\r\n                </Media>\r\n                <small>{data.attributes.name}</small>\r\n              </div>\r\n              <div>\r\n                <div className=\"font-weight-bold text-body-heading mx-1\">\r\n                  {data.attributes.tickets.data.length}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardBrowserState\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Chart from 'react-apexcharts'\r\nimport { HelpCircle } from 'react-feather'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardBody,\r\n  CardText,\r\n  Row,\r\n  Col,\r\n} from 'reactstrap'\r\nimport { filterByStatusTickets } from '../../../utility/Utils'\r\nimport { statusTicketsObj } from '../../../constants/Status/statusTickets'\r\nimport LoadingData from '../../../@core/components/spinner/loadingData'\r\n\r\nconst GoalOverview = function({notCloseTickets, endTickets, success, loadingTicket }) {\r\n  const options = {\r\n    chart: {\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n      dropShadow: {\r\n        enabled: true,\r\n        blur: 3,\r\n        left: 1,\r\n        top: 1,\r\n        opacity: 0.1,\r\n      },\r\n    },\r\n    colors: ['#51e5a8'],\r\n    plotOptions: {\r\n      radialBar: {\r\n        offsetY: 10,\r\n        startAngle: -150,\r\n        endAngle: 150,\r\n        hollow: {\r\n          size: '77%',\r\n        },\r\n        track: {\r\n          background: '#ebe9f1',\r\n          strokeWidth: '50%',\r\n        },\r\n        dataLabels: {\r\n          name: {\r\n            show: false,\r\n          },\r\n          value: {\r\n            color: '#5e5873',\r\n            fontFamily: 'Montserrat',\r\n            fontSize: '2.86rem',\r\n            fontWeight: '600',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shade: 'dark',\r\n        type: 'horizontal',\r\n        shadeIntensity: 0.5,\r\n        gradientToColors: [success],\r\n        inverseColors: true,\r\n        opacityFrom: 1,\r\n        opacityTo: 1,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n    stroke: {\r\n      lineCap: 'round',\r\n    },\r\n    grid: {\r\n      padding: {\r\n        bottom: 30,\r\n      },\r\n    },\r\n  }\r\n\r\n  const ticketsClosed =  endTickets || '0'\r\n  const ticketsNoClosed = notCloseTickets || '0'\r\n  const series = parseInt((ticketsClosed * 100) / ticketsNoClosed) || '0'\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag=\"h4\">Resumen de Objetivos</CardTitle>\r\n        {/* <HelpCircle size={18} className=\"text-muted cursor-pointer\" /> */}\r\n      </CardHeader>\r\n      <CardBody className=\"p-0\">\r\n        <Chart\r\n          options={options}\r\n          series={[series]}\r\n          type=\"radialBar\"\r\n          height={245}\r\n        />\r\n      </CardBody>\r\n      <Row className=\"border-top text-center mx-0\">\r\n        <Col xs=\"6\" className=\"border-right py-1\">\r\n          <CardText className=\"text-muted mb-0\">Completados</CardText>\r\n          <h3 className=\"font-weight-bolder mb-0\">{loadingTicket ? <LoadingData /> : ticketsClosed}</h3>\r\n        </Col>\r\n        <Col xs=\"6\" className=\"py-1\">\r\n          <CardText className=\"text-muted mb-0\">En Progreso</CardText>\r\n          <h3 className=\"font-weight-bolder mb-0\">{loadingTicket ? <LoadingData /> : ticketsNoClosed}</h3>\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  )\r\n}\r\nexport default GoalOverview\r\n","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { kFormatter } from '@utils'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardText,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Progress,\r\n} from 'reactstrap'\r\nimport Chart from 'react-apexcharts'\r\nimport { filterByPriorityTickets } from '../../../utility/Utils'\r\nimport LoadingData from '../../../@core/components/spinner/loadingData'\r\n\r\nconst AvgSessions = function({ priorityLowTickets, priorityNormalTickets, priorityHighTickets, colors }) {\r\n\r\n  const lowPriority = priorityLowTickets || 0\r\n  const normalPriority = priorityNormalTickets || 0\r\n  const highPriority = priorityHighTickets || 0\r\n\r\n  const totalPriority = lowPriority + normalPriority + highPriority\r\n\r\n  const options = {\r\n    chart: {\r\n      sparkline: { enabled: true },\r\n      toolbar: { show: false },\r\n    },\r\n    grid: {\r\n      show: false,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    },\r\n    states: {\r\n      hover: {\r\n        filter: 'none',\r\n      },\r\n    },\r\n    colors: [colors.success.main, colors.warning.main, colors.danger.main],\r\n    plotOptions: {\r\n      bar: {\r\n        columnWidth: '45%',\r\n        distributed: true,\r\n        endingShape: 'rounded',\r\n      },\r\n    },\r\n    tooltip: {\r\n      x: { show: false },\r\n    },\r\n    xaxis: {\r\n      type: 'numeric',\r\n    },\r\n  }\r\n  const series = [\r\n    {\r\n      name: 'Sessions',\r\n      data: [lowPriority, normalPriority, highPriority],\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Row className=\"pb-50\">\r\n          <Col\r\n            sm={{ size: 3, order: 1 }}\r\n            xs={{ order: 2 }}\r\n            className=\"d-flex justify-content-between flex-column mt-lg-0 mt-2\"\r\n          >\r\n            <div className=\"session-info mb-1 mb-lg-0\">\r\n              <h2 className=\"font-weight-bold mb-25\">{totalPriority}</h2>\r\n              <CardText className=\"mb-2\">Casos nuevos</CardText>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            sm={{ size: 9, order: 2 }}\r\n            xs={{ order: 1 }}\r\n            className=\"d-flex justify-content-between flex-column text-right\"\r\n          >\r\n            {/* <p className=\"text-muted\">Últimos 28 días</p> */}\r\n            <Chart\r\n              options={options}\r\n              series={series}\r\n              type=\"bar\"\r\n              height={250}\r\n              width={350}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <hr />\r\n        <Row className=\"pt-50\">\r\n          <Col className=\"mb-2\" md=\"4\" sm=\"12\">\r\n            <div className=\"d-flex justify-content-between align-items-end\">\r\n              <p className=\"mb-50\">Prioridad Baja</p>\r\n              <p className=\"mb-50\">{lowPriority}</p>\r\n            </div>\r\n            <Progress\r\n              className=\"avg-session-progress progress-bar-success mt-25\"\r\n              value={(lowPriority * 100) / totalPriority}\r\n            />\r\n          </Col>\r\n          <Col className=\"mb-2\" md=\"4\" sm=\"12\">\r\n            <div className=\"d-flex justify-content-between align-items-end\">\r\n              <p className=\"mb-50\">Prioridad Normal</p>\r\n              <p className=\"mb-50\">{normalPriority}</p>\r\n            </div>\r\n            <Progress\r\n              className=\"avg-session-progress progress-bar-warning mt-25\"\r\n              value={(normalPriority * 100) / totalPriority}\r\n            />\r\n          </Col>\r\n          <Col className=\"mb-2\" md=\"4\" sm=\"12\">\r\n            <div className=\"d-flex justify-content-between align-items-end\">\r\n              <p className=\"mb-50\">Prioridad Alta</p>\r\n              <p className=\"mb-50\">{highPriority}</p>\r\n            </div>\r\n            <Progress\r\n              className=\"avg-session-progress progress-bar-danger mt-25\"\r\n              value={(highPriority * 100) / totalPriority}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\nexport default AvgSessions\r\n","import { strapiAxios } from '../../../configs/axios'\r\nimport { strapiApi } from '../../../constants/api/strapiApi'\r\n\r\nexport const strapiGetTicketsTotal = async () => await strapiAxios.get(strapiApi.dashboard.total)\r\nexport const strapiGetTicketsOpen = async () => await strapiAxios.get(strapiApi.dashboard.open)\r\nexport const strapiGetTicketsEnd = async () => await strapiAxios.get(strapiApi.dashboard.end)\r\nexport const strapiGetTicketsNotClose = async () => await strapiAxios.get(strapiApi.dashboard.notClose)\r\nexport const strapiGetTicketsPriorityLow = async () => await strapiAxios.get(strapiApi.dashboard.priorityLow)\r\nexport const strapiGetTicketsPriorityNormal = async () => await strapiAxios.get(strapiApi.dashboard.priorityNormal)\r\nexport const strapiGetTicketsPriorityHigh = async () => await strapiAxios.get(strapiApi.dashboard.priorityHigh)\r\nexport const strapiGetInstitutionWithTickets = async () => await strapiAxios.get(strapiApi.dashboard.institutionWithTickets)\r\nexport const strapiGetUsersActive = async () => await strapiAxios.get(strapiApi.dashboard.usersActive)\r\n","import { useEffect, useContext, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { kFormatter } from '@utils'\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\n\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nimport StatsWithAreaChart from '../../../@core/components/widgets/stats/StatsWithAreaChart'\r\nimport TinyChartStats from '../../../@core/components/widgets/stats/TinyChartStats'\r\nimport ComponentSpinner from '../../../@core/components/spinner/Loading-spinner'\r\n\r\nimport OrdersBarChart from './OrdersBarChart'\r\nimport ProfitLineChart from './ProfitLineChart'\r\nimport CardTransactions from './CardTransactions'\r\nimport CardBrowserStates from './CardBrowserState'\r\nimport Earnings from './Earnings'\r\nimport GoalOverview from './GoalOverview'\r\nimport AvgSessions from './AvgSessions'\r\n\r\nimport {\r\n  getAllTicketsActions,\r\n  getTicketsByTwoDateActions,\r\n} from '../../../redux/actions/zammad/tickets'\r\n\r\nimport { dataInfoChart } from './dataInfoChart'\r\n\r\nimport '@styles/react/libs/charts/apex-charts.scss'\r\nimport {\r\n  dateToday,\r\n  dateBeforeDay,\r\n  formatDate,\r\n  toMs,\r\n} from '../../../utility/Utils'\r\nimport { getAllOrganizationsActions } from '../../../redux/actions/zammad/organizations'\r\nimport { getAllProvincesActions } from '../../../redux/actions/territories/provinces'\r\nimport { getAllUsersActions } from '../../../redux/actions/zammad/users'\r\nimport { getAllTickets } from '../../../services/zammad/ticket'\r\nimport { ticketNewObjectFiltered } from '../../../utility/zammad/filterData'\r\nimport { sweetAlertError } from '../../../@core/components/sweetAlert'\r\nimport { strapiGetInstitutionWithTickets, strapiGetTicketsEnd, strapiGetTicketsNotClose, strapiGetTicketsOpen, strapiGetTicketsPriorityHigh, strapiGetTicketsPriorityLow, strapiGetTicketsPriorityNormal, strapiGetTicketsTotal, strapiGetUsersActive } from '../../../services/strapi/dashboard'\r\n\r\nconst AnalyticsDashboard = function () {\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const [totalTickets, setTotalTickets] = useState([])\r\n  const [openTickets, setOpenTickets] = useState([])\r\n  const [endTickets, setEndTickets] = useState([])\r\n  const [notCloseTickets, setNotCloseTickets] = useState([])\r\n  const [priorityLowTickets, setPriorityLowTickets] = useState([])\r\n  const [priorityNormalTickets, setPriorityNormalTickets] = useState([])\r\n  const [priorityHighTickets, setpriorityHighTickets] = useState([])\r\n  const [institutionWithTickets, setInstitutionWithTickets] = useState([])\r\n  console.log(institutionWithTickets)\r\n  const [usersActive, setUsersActive] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    strapiGetTicketsTotal().then(res => setTotalTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetTicketsOpen().then(res => setOpenTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetTicketsEnd().then(res => setEndTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetTicketsNotClose().then(res => setNotCloseTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetTicketsPriorityLow().then(res => setPriorityLowTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetTicketsPriorityNormal().then(res => setPriorityNormalTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetTicketsPriorityHigh().then(res => setpriorityHighTickets(res?.data?.meta?.pagination?.total))\r\n    strapiGetInstitutionWithTickets().then(res => setInstitutionWithTickets(res?.data?.data))\r\n    strapiGetUsersActive().then(res => setUsersActive(res?.data?.length))\r\n\r\n  }, [])\r\n\r\n  const infoChart = dataInfoChart({ totalTickets, openTickets, endTickets, usersActive })\r\n\r\n  return (\r\n    <div id=\"dashboard-analytics\">\r\n      <Row className=\"match-height\">\r\n        {infoChart.map((dataInfoChart, index) => (\r\n          <Col lg=\"3\" sm=\"6\" key={index}>\r\n            <StatsWithAreaChart\r\n              kFormatter={kFormatter}\r\n              dataInfoChart={dataInfoChart}\r\n              series={[{ name: dataInfoChart.title, data: null }]}\r\n              loadingTicket={false}\r\n            />\r\n          </Col>\r\n        ))}\r\n\r\n        {/* <Col lg=\"2\" md=\"6\">\r\n          <Row className=\"match-height\"> */}\r\n        {/* <Col xs=\"12\">\r\n              <TinyChartStats\r\n                height={70}\r\n                newDataTableTicketsTwo={newDataTableTicketsTwo}\r\n                type=\"bar\"\r\n                title=\"Casos por Día\"\r\n                total={casesDayState.firstDay}\r\n                loadingTicket={loadingTicket}\r\n                series={[\r\n                  {\r\n                    name: 'Casos',\r\n                    data: [\r\n                      casesDayState.thirdDay,\r\n                      casesDayState.secondDay,\r\n                      casesDayState.firstDay,\r\n                    ],\r\n                  },\r\n                ]}\r\n              />\r\n            </Col> */}\r\n        {/* <Col xs=\"12\">\r\n              <TinyChartStats\r\n                height={70}\r\n                newDataTableTicketsTwo={newDataTableTicketsTwo}\r\n                type=\"line\"\r\n                title=\"Casos por Semana\"\r\n                total={casesWeekState.firstWeek}\r\n                loadingTicket={loadingTicket}\r\n                series={[\r\n                  {\r\n                    name: 'Casos',\r\n                    data: [\r\n                      casesWeekState.fourthWeek,\r\n                      casesWeekState.thirdWeek,\r\n                      casesWeekState.secondWeek,\r\n                      casesWeekState.firstWeek,\r\n                    ],\r\n                  },\r\n                ]}\r\n              />\r\n            </Col> */}\r\n        {/* <Col lg=\"12\" md=\"6\" xs=\"12\"> */}\r\n        {/* <Earnings\r\n                beforeMonth={casesWeekState.secondWeek}\r\n                thisMonth={casesWeekState.firstWeek}\r\n                success={colors.success.main}\r\n              /> */}\r\n        {/* </Col>\r\n          </Row>\r\n        </Col> */}\r\n\r\n        <Col lg=\"4\" md=\"6\" xs=\"12\">\r\n          <GoalOverview\r\n            endTickets={endTickets}\r\n            notCloseTickets={notCloseTickets}\r\n            success={colors.success.main}\r\n            loadingTicket={false}\r\n          />\r\n        </Col>\r\n        <Col lg=\"8\" md=\"8\" xs=\"12\">\r\n          <CardBrowserStates\r\n            institutionWithTickets={institutionWithTickets}\r\n            loadingTicket\r\n          />\r\n        </Col>\r\n        {/* <Col lg=\"4\" md=\"6\" xs=\"12\">\r\n          <CardTransactions\r\n            loadingTicket={true}\r\n          />\r\n        </Col> */}\r\n        <Col lg=\"12\" xs=\"12\">\r\n          <AvgSessions\r\n            priorityLowTickets={priorityLowTickets}\r\n            priorityNormalTickets={priorityNormalTickets}\r\n            priorityHighTickets={priorityHighTickets}\r\n            colors={colors}\r\n            loadingTicket\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnalyticsDashboard\r\n","import { useContext } from 'react'\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\nimport { CheckCircle, Users, FileText, BookOpen } from 'react-feather'\r\nimport { filterByStatusTickets } from '../../../utility/Utils'\r\nimport { statusTicketsObj } from '../../../constants/Status/statusTickets'\r\n\r\nexport const dataInfoChart = ({totalTickets, openTickets, endTickets, usersActive}) => {\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  return [\r\n    {\r\n      icon: <FileText size={21} />,\r\n      color: 'danger',\r\n      colorHEX: colors.danger.main,\r\n      quantity: totalTickets || '0',\r\n      title: 'Total de Casos',\r\n    },\r\n    {\r\n      icon: <BookOpen size={21} />,\r\n      color: 'warning',\r\n      colorHEX: colors.warning.main,\r\n      quantity: openTickets || '0',\r\n      title: 'Casos Abiertos',\r\n    },\r\n    {\r\n      icon: <CheckCircle size={21} />,\r\n      color: 'secondary',\r\n      colorHEX: colors.secondary.main,\r\n      quantity: endTickets || '0',\r\n      title: 'Casos Finalizados',\r\n    },\r\n    {\r\n      icon: <Users size={21} />,\r\n      color: 'primary',\r\n      colorHEX: colors.primary.main,\r\n      quantity: usersActive || '0',\r\n      title: 'Reporteros Activos',\r\n    },\r\n  ]\r\n}\r\n","import axios from 'axios'\r\n\r\nconst { accessToken } = JSON.parse(localStorage.getItem('userData')) || []\r\n\r\nexport const zammadAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL,\r\n  headers: {\r\n    authorization: `Basic ${accessToken}`,\r\n  },\r\n})\r\n\r\nexport const territoriesAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_TERRITORIES,\r\n})\r\n\r\nexport const incidentsAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_INCIDENTS,\r\n})\r\n\r\nexport const strapiAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_API_STRAPI,\r\n})\r\n\r\nstrapiAxios.interceptors.request.use((config) => {\r\n  const { token } = JSON.parse(localStorage.getItem('user')) || []\r\n  let jwt = \"\"\r\n  if (token) {\r\n    jwt = token\r\n  }\r\n  config.headers.Authorization = `Bearer ${jwt}`\r\n  return config;\r\n}, (error) => console.log(\"error ============> \", error))\r\n\r\nstrapiAxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    console.log(\"error response ============> \", error)\r\n    if(error?.response?.status === 401){\r\n      localStorage.clear()\r\n      window.location.href = '/';\r\n    }\r\n  }\r\n)","export const zammadApi = {\r\n  tickets: 'tickets',\r\n  ticketById: (id) => `tickets/${id}?expand=true`,\r\n  allTickets: 'ticket_overviews?view=all',\r\n  ticketsByDate: 'tickets/search?query=created_at:',\r\n  ticketsByState: 'tickets/search?query=state_id:',\r\n  ticketsByGroup: 'tickets/search?query=group_id:',\r\n\r\n  ticketPriorities: 'ticket_priorities',\r\n  \r\n  ticketStates: 'ticket_states',\r\n  \r\n  postTags: 'tag_list',\r\n  tagsByName: (name) => `tag_search?term=${name}`,\r\n  \r\n  postTicketTags: 'tags/add',\r\n  ticketTags: (id) => `tags?object=Ticket&o_id=${id}`,\r\n\r\n  ticketArticles: 'ticket_articles/by_ticket/',\r\n  postTicketArticles: 'ticket_articles',\r\n  ticketArticlesAttachment: 'ticket_attachment/',\r\n\r\n  users: 'users',\r\n  userMe: 'users/me?expand=true',\r\n  userById: (id) => `users/${id}?expand=true`,\r\n  userByCedula: 'users/search?query=cedula:',\r\n  allUsers: 'users?expand=true',\r\n\r\n  allRols: 'roles',\r\n\r\n  organizations: 'organizations',\r\n  organizationsByAcronym: (acronym) => `organizations/search?query=acronimo:${acronym}`,\r\n\r\n  groups: 'groups',\r\n}\r\n","const ticketPopulate = ({pageNumber}) => `?pagination[page]=${pageNumber}&pagination[pageSize]=10&fields[0]=title&fields[1]=address&fields[2]=description&fields[3]=state&fields[4]=priority&fields[5]=createdAt&fields[6]=zone_code&sort[0]=publishedAt:desc&populate[owner][fields][0]=firstname&populate[owner][fields][1]=lastname&populate[owner][fields][2]=cedula&populate[beneficiary][fields][0]=name&populate[beneficiary][fields][1]=cedula&populate[beneficiary][fields][2]=phone&populate[beneficiary][fields][3]=email&populate[institution][fields][0]=acronym&populate[institution][fields][1]=name&populate[services][fields][0]=name&populate[services][fields][1]=type&populate[services][fields][2]=id`\r\nconst ticketPopulateId = \"?fields[0]=title&fields[1]=address&fields[2]=description&fields[3]=state&fields[4]=priority&fields[5]=createdAt&fields[6]=zone_code&sort[0]=publishedAt:desc&populate[owner][fields][0]=firstname&populate[owner][fields][1]=lastname&populate[owner][fields][2]=cedula&populate[beneficiary][fields][0]=name&populate[beneficiary][fields][1]=cedula&populate[beneficiary][fields][2]=phone&populate[beneficiary][fields][3]=email&populate[institution][fields][0]=acronym&populate[institution][fields][1]=name&populate[services][fields][0]=name&populate[services][fields][1]=type&populate[services][fields][2]=id\"\r\nconst ticketComments = \"&populate[comments][populate][0]=attachments&populate[comments][populate][attachments][fields][0]=url&populate[comments][populate][attachments][fields][1]=name&populate[comments][populate][attachments][fields][1]=mime\"\r\nconst ticketOwner = \"&populate[comments][populate][owner][fields][1]=firstname&populate[comments][populate][owner][fields][2]=lastname&populate[comments][populate][owner][fields][2]=cedula\"\r\n\r\nexport const strapiApi = {\r\n  auth: {\r\n    login: \"/auth/local\",\r\n  },\r\n  dashboard: {\r\n    total: \"tickets\",\r\n    open: \"tickets?filters[state][$eq]=open\",\r\n    end: \"tickets?filters[state][$eq]=closed\",\r\n    notClose: \"tickets?filters[state][$ne]=closed\",\r\n    priorityLow: \"tickets?filters[priority][$eq]=low\",\r\n    priorityNormal: \"tickets?filters[priority][$eq]=normal\",\r\n    priorityHigh: \"tickets?filters[priority][$eq]=high\",\r\n    institutionWithTickets: \"institutions?populate[tickets][fields]=id\",\r\n    usersActive: \"users\"\r\n  },\r\n  beneficiaries: {\r\n    beneficiary: ({valueSearch=\"\", pageNumber= 1}) => `beneficiaries?pagination[page]=${pageNumber}&pagination[pageSize]=10&filters[cedula][$containsi]=${valueSearch}`,\r\n    beneficiaryPost: `beneficiaries`,\r\n    beneficiaryId: (id) => `beneficiaries/${id}`,\r\n    beneficiaryByCedula: (id) => `beneficiaries?filters[cedula][$eq]=${id}`,\r\n  },\r\n  users: {\r\n    userMe: 'users/me?populate[institution][fields]=name&populate[institution][fields]=acronym',\r\n    user: ({valueSearch=\"\", valueZone=\"\", pageNumber= 1}) => `users?pagination[page]=1&pagination[pageSize]=10&filters[cedula][$containsi]=${valueSearch}&filters[zone_code][$startsWith]=${valueZone}`,\r\n    userPost: 'users',\r\n    userId: (id) => `users/${id}?populate[institution][fields]=name&populate[institution][fields]=acronym`,\r\n    userImport: \"users/import\"\r\n  },\r\n  tickets: {\r\n    ticket: ({valueSearch=\"\", valueZone=\"\", pageNumber= 1}) => `tickets${ticketPopulate({pageNumber})}&filters[title][$containsi]=${valueSearch}&filters[zone_code][$startsWith]=${valueZone}`,\r\n    ticketPost: `tickets`,\r\n    ticketId: (id) => `tickets/${id}${ticketPopulateId}${ticketComments}${ticketOwner}`,\r\n    ticketImport: \"tickets/import\",\r\n  },\r\n  institutions: {\r\n    institution: ({valueSearch=\"\", pageNumber= 1}) => `institutions?pagination[page]=${pageNumber}&pagination[pageSize]=10&filters[name][$containsi]=${valueSearch}`,\r\n    institutionPost: `institutions`,\r\n    institutionId: (id) => `institutions/${id}?populate[services][fields][0]=name&populate[services][fields][1]=type&populate[services][fields][2]=id&populate[owner][fields][0]=firstname&populate[owner][fields][1]=lastname&populate[owner][fields][2]=cedula`,\r\n    institutionByIdService: (idService) => `institutions?fields[0]=name&fields[1]=acronym&populate[services][fields][0]=name&populate[services][fields][1]=type&populate[services][fields][2]=id&filters[services][id][$eq]=${idService}`,\r\n  },\r\n  services: {\r\n    all: 'services?pagination[page]=1&pagination[pageSize]=10',\r\n    serviceId: (id) => `services/${id}?fields[0]=name&fields[1]=type&populate[children][fields][0]=name&populate[children][fields][1]=type&populate[parent][fields][0]=name&populate[parent][fields][1]=type&sort[0]=publishedAt:asc`,\r\n    service: ({valueSearch, pageNumber= 1}) => `services?pagination[page]=${pageNumber}&pagination[pageSize]=10&filters[type][$eq]=service&filters[name][$containsi]=${valueSearch}`,\r\n    category: ({valueSearch, pageNumber= 1}) => `services?pagination[page]=${pageNumber}&pagination[pageSize]=10&filters[type][$eq]=category&filters[name][$containsi]=${valueSearch}`,\r\n    subCategory: ({valueSearch, pageNumber= 1}) => `services?pagination[page]=${pageNumber}&pagination[pageSize]=10&filters[type][$eq]=subcategory&filters[name][$containsi]=${valueSearch}`,\r\n  },\r\n  comments: {\r\n    comment: 'comments'\r\n  },\r\n  uploads: {\r\n    upload: \"upload\"\r\n  }\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport const sweetAlert = ({title='', text='', type='error'}) => (\r\n  MySwal.fire({\r\n    title: title,\r\n    text: text,\r\n    icon: type,\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n    },\r\n    buttonsStyling: false,\r\n  })\r\n)\r\n\r\nexport const sweetAlertError = () => (\r\n  MySwal.fire({\r\n    title: 'Error',\r\n    text: 'Ocurrió un error al procesar la solicitud',\r\n    icon: 'error',\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n    },\r\n    buttonsStyling: false,\r\n  })\r\n)\r\n\r\nexport const sweetAlertGood = () => {\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 5000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n  })\r\n  \r\n  Toast.fire({\r\n    icon: 'success',\r\n    title: 'Proceso realizado correctamente'\r\n  })\r\n}","export const territoriesApi = {\r\n  regions: 'regions',\r\n  provinces: 'provinces',\r\n  municipalities: 'municipalities',\r\n\r\n  regionByIdentifier: (id) => `regions?identifier=${id}`,\r\n  provinceByIdentifier: (id) => `provinces?identifier=${id}`,\r\n  municipalityByIdentifier: (id) => `municipalities?identifier=${id}`,\r\n  districtByIdentifier: (id) => `districts?identifier=${id}`,\r\n  sectionByIdentifier: (id) => `sections?identifier=${id}`,\r\n  neighborhoodByIdentifier: (id) => `neighborhoods?identifier=${id}`,\r\n  subNeighborhoodByIdentifier: (id) => `sub-neighborhoods?identifier=${id}`,\r\n\r\n  provincesByRegion: (id) => `regions/${id}/provinces`,\r\n\r\n  municipalitiesByprovincesByRegions: (idRegions, idProvinces) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities`,\r\n\r\n  districtByIdProvinceByIdMunicipality: (idRegions, idProvinces, idMunicipality) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts`,\r\n\r\n  sectionByIdMunicipalityByIdDistrict: (idRegions, idProvinces, idMunicipality, idDistrict) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts/${idDistrict}/sections`,\r\n\r\n  neighborhoodByIdDistrictByIdSection: (idRegions, idProvinces, idMunicipality, idDistrict, idSection) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts/${idDistrict}/sections/${idSection}/neighborhoods`,\r\n\r\n  subNeighborhoodByIdSectionByIdNeighborhood: (idRegions, idProvinces, idMunicipality, idDistrict, idSection, idNeighborhood) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts/${idDistrict}/sections/${idSection}/neighborhoods/${idNeighborhood}/sub-neighborhoods`,\r\n\r\n}\r\n","const ComponentSpinner = () => {\r\n  return (\r\n    <div className='fallback-spinner'>\r\n      <div className='loading component-loader'>\r\n        <div className='effect-1 effects'></div>\r\n        <div className='effect-2 effects'></div>\r\n        <div className='effect-3 effects'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ComponentSpinner\r\n","import { zammadAxios } from '../../../configs/axios'\r\nimport { zammadApi } from '../../../constants/api/zammadApi'\r\n\r\nexport const postGroup = async (data) => await zammadAxios.post(zammadApi.groups, data)\r\n\r\nexport const putGroup = async (id, data) => await zammadAxios.put(`${zammadApi.groups}/${id}`, data)\r\n\r\nexport const getGroups = async () => await zammadAxios.get(zammadApi.groups)\r\n","import { zammadAxios } from '../../../configs/axios'\r\nimport { zammadApi } from '../../../constants/api/zammadApi'\r\n\r\nexport const postUser = async (dataObj) => await zammadAxios.post(zammadApi.users, dataObj)\r\n\r\nexport const putUser = async (dataObj) => await zammadAxios.put(`${zammadApi.users}/${dataObj.id}`, dataObj)\r\n\r\nexport const getUserMe = async () => await zammadAxios.get(zammadApi.userMe)\r\n\r\nexport const getUserById = async (id) => await zammadAxios.get(zammadApi.userById(id))\r\n\r\nexport const getUserByCedula = async (id) => await zammadAxios.get(`${zammadApi.userByCedula}${id}`)\r\n\r\nexport const getAllUsers = async () => await zammadAxios.get(zammadApi.allUsers)\r\n","import { Spinner } from 'reactstrap'\r\n\r\nconst LoadingData = ({size= ''}) => {\r\n    return (\r\n        <Spinner\r\n            color=\"primary\"\r\n            size={size}\r\n            // type=\"grow\"\r\n        />\r\n    )\r\n  }\r\n  \r\n  export default LoadingData\r\n  ","import { zammadAxios } from '../../../../configs/axios'\r\nimport { zammadApi } from '../../../../constants/api/zammadApi'\r\nimport { zammadTypes } from '../../../types/zammad'\r\n\r\nexport const getAllUsersActions = () => (dispatch) =>\r\n  zammadAxios.get(zammadApi.allUsers).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_USERS,\r\n      payload: response.data,\r\n    })\r\n  })\r\n\r\nexport const getUserMeActions = () => (dispatch) =>\r\n  zammadAxios.get(zammadApi.userMe).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_USER_ME,\r\n      payload: response.data,\r\n    })\r\n  })\r\n","import { territoriesAxios } from '../../../../configs/axios'\r\nimport { territoriesApi } from '../../../../constants/api/territoriesApi'\r\nimport { territoriesTypes } from '../../../types/territories'\r\n\r\nexport const getAllMunicipalitiesActions = () => (dispatch) =>\r\n  territoriesAxios.get(territoriesApi.municipalities).then((response) => {\r\n    dispatch({\r\n      type: territoriesTypes.GET_MUNICIPALITIES,\r\n      payload: response.data.data,\r\n    })\r\n  })\r\n\r\nexport const getMunicipalitiesByprovincesByRegionsActions =\r\n  (idRegions = null, idProvinces = null) =>\r\n  (dispatch) => {\r\n    if (idRegions && idProvinces) {\r\n      return territoriesAxios\r\n        .get(\r\n          territoriesApi.municipalitiesByprovincesByRegions(\r\n            idRegions,\r\n            idProvinces,\r\n          ),\r\n        )\r\n        .then((response) => {\r\n          dispatch({\r\n            type: territoriesTypes.GET_MUNICIPALITIES_BY_PROVINCES_BY_REGIONS,\r\n            payload: response.data.data,\r\n          })\r\n        })\r\n    }\r\n\r\n    return dispatch(cleanSelectMunicipalities())\r\n  }\r\n\r\nexport const cleanSelectMunicipalities = () => ({\r\n  type: territoriesTypes.CLEAN_SELECT_MUNICIPALITIES,\r\n})\r\n","export const New = {id: 1, value: 'new', label: 'Nuevo'}\r\nexport const Open = {id: 2, value: 'open', label: 'Abierto'}\r\nexport const PendingReminder = {id: 3, value: 'pending_reminder', label: 'Pendiente Recordatorio'}\r\nexport const Closed = {id: 4, value: 'closed', label: 'Cerrado'}\r\nexport const Merged = {id: 5, value: 'merged', label: 'Fusionado'}\r\nexport const Removed = {id: 6, value: 'removed', label: 'Removido'}\r\n\r\nexport const statusTicketsObj = {\r\n  new: {\r\n    idN: 1,\r\n    id: 'new',\r\n    value: 'new',\r\n    label: 'Nuevo',\r\n    color: '#3498DB',\r\n  },\r\n  open: {\r\n    idN: 2,\r\n    id: 'open',\r\n    value: 'open',\r\n    label: 'Abierto',\r\n    color: '#5ECB08',\r\n  },\r\n  pending_reminder: {\r\n    idN: 3,\r\n    id: 'pending_reminder',\r\n    value: 'pending_reminder',\r\n    label: 'Pendiente Recordatorio',\r\n  },\r\n  closed: {\r\n    idN: 4,\r\n    id: 'closed',\r\n    value: 'closed',\r\n    label: 'Cerrado',\r\n    color: '#CFCFCF',\r\n  },\r\n  merged: {\r\n    idN: 5,\r\n    id: 'merged',\r\n    value: 'merged',\r\n    label: 'Fusionado',\r\n  },\r\n  removed: {\r\n    idN: 6,\r\n    id: 'removed',\r\n    value: 'removed',\r\n    label: 'En Progreso',\r\n  },\r\n}\r\n\r\nexport const statusTicketsArray = [\r\n  New,\r\n  Open,\r\n  PendingReminder,\r\n  Closed,\r\n  Merged,\r\n  Removed,\r\n]\r\n","import { zammadAxios } from '../../../../configs/axios'\r\nimport { zammadApi } from '../../../../constants/api/zammadApi'\r\nimport { zammadTypes } from '../../../types/zammad'\r\n\r\nexport const getAllOrganizationsActions = () => (dispatch) =>\r\n  zammadAxios.get(zammadApi.organizations).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_ORGANIZATIONS,\r\n      payload: response.data,\r\n    })\r\n  })\r\n","// ** Custom Components\r\nimport Avatar from '@components/avatar'\r\n\r\nimport classnames from 'classnames'\r\nimport Chart from 'react-apexcharts'\r\nimport { Card, CardBody } from 'reactstrap'\r\n\r\nimport LoadingData from '../../../../@core/components/spinner/loadingData'\r\n\r\n// ** Default Options\r\n\r\nconst StatsWithAreaChart = props => {\r\n  // ** Props\r\n  const { kFormatter, newDataTableTicketsTwo, dataInfoChart, series, type = 'area', height, className, loadingTicket, ...rest } = props\r\n\r\n  const options = {\r\n    chart: {\r\n      id: 'revenue',\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n    colors: [dataInfoChart.colorHEX],\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2.5,\r\n    },\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 0.9,\r\n        opacityFrom: 0.7,\r\n        opacityTo: 0.5,\r\n        stops: [0, 80, 100],\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      labels: {\r\n        show: false,\r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    tooltip: {\r\n      x: { show: false },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody\r\n        className={classnames('pb-0', {\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${dataInfoChart.color}`} icon={dataInfoChart.icon} />\r\n        <h2 className='font-weight-bolder mt-1'>{loadingTicket ? <LoadingData /> : kFormatter(dataInfoChart.quantity)}</h2>\r\n        <p className='card-text mb-1'>{dataInfoChart.title}</p>\r\n      </CardBody>\r\n      {series[0].data &&\r\n        <Chart options={options} series={series} type={type} height={height ? height : 100} />\r\n      }\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default StatsWithAreaChart\r\n","import { territoriesAxios } from '../../../../configs/axios'\r\nimport { territoriesApi } from '../../../../constants/api/territoriesApi'\r\nimport { territoriesTypes } from '../../../types/territories'\r\nimport { cleanSelectMunicipalities } from '../municipalities'\r\n\r\nexport const getAllProvincesActions = () => (dispatch) =>\r\n  territoriesAxios.get(territoriesApi.provinces).then((response) => {\r\n    dispatch({\r\n      type: territoriesTypes.GET_PROVINCES,\r\n      payload: response.data.data,\r\n    })\r\n  })\r\n\r\nexport const getProvincesByRegionActions =\r\n  (id = null) =>\r\n  (dispatch) => {\r\n    if (id) {\r\n      return territoriesAxios\r\n        .get(territoriesApi.provincesByRegion(id))\r\n        .then((response) => {\r\n          dispatch({\r\n            type: territoriesTypes.GET_PROVINCES_BY_REGION,\r\n            payload: response.data.data,\r\n          })\r\n        })\r\n    }\r\n\r\n    return (\r\n      dispatch(cleanSelectProvinces()), dispatch(cleanSelectMunicipalities())\r\n    )\r\n  }\r\n\r\nexport const cleanSelectProvinces = () => ({\r\n  type: territoriesTypes.CLEAN_SELECT_PROVINCES,\r\n})\r\n","import { useContext } from 'react'\r\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\r\nimport Chart from 'react-apexcharts'\r\nimport { Card, CardBody } from 'reactstrap'\r\nimport LoadingData from '../../spinner/loadingData'\r\n\r\nconst TinyChartStats = props => {\r\n  // ** Props\r\n  const { title, newDataTableTicketsTwo, total, series, type, height, loadingTicket } = props\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const options = {\r\n    chart: {\r\n      stacked: true,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    grid: {\r\n      show: true,\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n        top: -15,\r\n        bottom: -15,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      bar: {\r\n        horizontal: false,\r\n        columnWidth: '30%',\r\n        startingShape: 'rounded',\r\n        colors: {\r\n          backgroundBarColors: [\r\n            '#f3f3f3',\r\n            '#f3f3f3',\r\n            '#f3f3f3',\r\n            '#f3f3f3',\r\n            '#f3f3f3',\r\n          ],\r\n          backgroundBarRadius: 5,\r\n        },\r\n      },\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    colors: [colors.warning.main],\r\n    xaxis: {\r\n      labels: {\r\n        show: false,\r\n      },\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        show: false,\r\n      },\r\n    },\r\n  }\r\n\r\n  return (\r\n    <Card className='card-tiny-line-stats'>\r\n      <CardBody className='pb-50'>\r\n        <h6>{title}</h6>\r\n        <h2 className='font-weight-bolder mb-1'>{loadingTicket ? <LoadingData /> : total}</h2>\r\n        {series &&\r\n          <Chart options={options} series={series} type={type} height={height} />\r\n        }\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TinyChartStats\r\n","import { zammadAxios } from '../../../../configs/axios'\r\nimport { zammadApi } from '../../../../constants/api/zammadApi'\r\nimport { zammadTypes } from '../../../types/zammad'\r\n\r\nexport const getAllTicketsActions = () => (dispatch) =>\r\n  zammadAxios.get(zammadApi.allTickets).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n\r\nexport const getTicketsByDateActions = (date) => (dispatch) =>\r\n  zammadAxios.get(`${zammadApi.ticketsByDate}${date}`).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS_DATE,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n\r\nexport const getTicketsByTwoDateActions = (date1, date2) => (dispatch) =>\r\n  zammadAxios\r\n    .get(`${zammadApi.ticketsByDate}[${date1} TO ${date2}]`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: zammadTypes.GET_TICKETS_TWO_DATE,\r\n        payload: response.data.assets,\r\n      })\r\n    })\r\n\r\nexport const getTicketsByStateActions = (idState) => (dispatch) =>\r\n  zammadAxios.get(`${zammadApi.ticketsByState}${idState}`).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS_STATE,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n\r\nexport const getTicketsByGroupActions = (idGroup) => (dispatch) =>\r\n  zammadAxios.get(`${zammadApi.ticketsByGroup}${idGroup}`).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS_GROUP,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n"],"sourceRoot":""}