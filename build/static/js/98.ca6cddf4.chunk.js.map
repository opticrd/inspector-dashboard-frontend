{"version":3,"sources":["views/apps/bandeja/list/columns.js","constants/label/territories.js","views/apps/bandeja/list/index.js","constants/api/zammadApi.js","constants/api/territoriesApi.js","@core/components/card-grid/index.js","services/zammad/group/index.js","services/zammad/user/index.js","redux/actions/territories/regions/index.js","redux/actions/territories/municipalities/index.js","constants/Status/statusTickets.js","services/strapi/tickets/index.js","redux/actions/territories/provinces/index.js","@core/components/status/index.js","redux/actions/zammad/tickets/index.js"],"names":["columns","name","minWidth","selector","sortable","cell","row","to","Url","dashboardInbox","id","className","attributes","title","style","width","menuPlacement","menuPosition","theme","selectThemeColors","classNamePrefix","defaultValue","statusTicketsObj","state","onChange","e","ticket","console","log","dataObj","data","value","strapiPutStateTicket","then","res","catch","err","sweetAlert","text","type","handleChangeStatus","options","statusTicketsArray","map","dataMap","label","address","formatDate","createdAt","userInfo","owner","firstName","firstname","lastName","lastname","cedula","rowClient","institutionInfo","institution","acronym","rowInstitution","beneficiary","statusPriority","priority","UncontrolledDropdown","DropdownToggle","tag","size","DropdownMenu","right","DropdownItem","Link","territoriesLabel","Bandeja","dispatch","useDispatch","useState","dataTableTickets","setDataTableTickets","loadingTicket","setLoadingTicket","valueSearch","setValueSearch","valueZone","setValueZone","pageNumber","setPageNumber","useEffect","strapiGetTickets","sweetAlertError","finally","getAllRegionsActions","regionsSelector","useSelector","regions","provincesSelector","provinces","municipalitiesSelector","municipalities","defaultValueState","regionState","setRegionState","provinciaState","setProvinciaState","municipioState","setMunicipioState","cardHeaderTitle","Row","Col","md","Label","isClearable","isLoading","optionsCodeValueSelectNoData","getProvincesByRegionActions","handleChangeRegions","noOptionsMessage","inputValue","noOptionsMessageSelect","getMunicipalitiesByprovincesByRegionsActions","handleChangeProvinces","handleChangeMunicipalities","columnsTable","dataTable","showButtonAddReport","loadingTable","zammadApi","tickets","ticketById","allTickets","ticketsByDate","ticketsByState","ticketsByGroup","ticketPriorities","ticketStates","postTags","tagsByName","postTicketTags","ticketTags","ticketArticles","postTicketArticles","ticketArticlesAttachment","users","userMe","userById","userByCedula","allUsers","allRols","organizations","organizationsByAcronym","groups","territoriesApi","regionByIdentifier","provinceByIdentifier","municipalityByIdentifier","districtByIdentifier","sectionByIdentifier","neighborhoodByIdentifier","subNeighborhoodByIdentifier","provincesByRegion","municipalitiesByprovincesByRegions","idRegions","idProvinces","districtByIdProvinceByIdMunicipality","idMunicipality","sectionByIdMunicipalityByIdDistrict","idDistrict","neighborhoodByIdDistrictByIdSection","idSection","subNeighborhoodByIdSectionByIdNeighborhood","idNeighborhood","CardGrid","cardHeaderComponent","children","postGroup","a","zammadAxios","post","getGroups","get","postUser","putUser","put","getUserMe","getUserByCedula","territoriesAxios","response","territoriesTypes","GET_REGIONS","payload","GET_MUNICIPALITIES_BY_PROVINCES_BY_REGIONS","cleanSelectMunicipalities","CLEAN_SELECT_MUNICIPALITIES","new","idN","color","open","pending_reminder","closed","merged","removed","strapiAxios","strapiApi","strapiGetTicketsById","ticketId","strapiPostTickets","ticketPost","strapiImportTickets","ticketImport","GET_PROVINCES_BY_REGION","cleanSelectProvinces","CLEAN_SELECT_PROVINCES","statusTickets","status","changeColorLabel","pendingReminder","inProgress","sytleStatus","height","borderRadius","display","marginRight","background","statusId"],"mappings":"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","file":"static/js/98.ca6cddf4.chunk.js","sourcesContent":["import Select from 'react-select'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Badge,\r\n} from 'reactstrap'\r\nimport { MoreVertical, FileText, Trash2, Archive } from 'react-feather'\r\nimport { statusTickets, statusPriority } from '../../../../@core/components/status'\r\n\r\nimport {\r\n  rowActions,\r\n  rowClient,\r\n  rowInstitution,\r\n} from '../../../../@core/components/table/commonColumns'\r\nimport { formatDate, selectThemeColors } from '../../../../utility/Utils'\r\nimport { statusTicketsArray, statusTicketsObj } from '../../../../constants/Status/statusTickets'\r\nimport { putUpdateStatusTicket } from '../../../../services/zammad/ticket'\r\nimport Url from '../../../../constants/Url'\r\n\r\nimport { sweetAlert, sweetAlertGood } from '../../../../@core/components/sweetAlert'\r\nimport { strapiPutStateTicket } from '../../../../services/strapi/tickets'\r\n\r\n\r\nconst handleChangeStatus = (e, ticket) => {\r\n  console.log(e)\r\n  console.log(ticket)\r\n  const dataObj = {\r\n    data: {\r\n      state: e.value\r\n    }\r\n  }\r\n  strapiPutStateTicket(ticket, dataObj)\r\n    .then(res => console.log(res))\r\n    .catch((err) => {\r\n      sweetAlert({\r\n        title: 'Error!',\r\n        text: 'Ocurrió un error al modificar el estado del ticket.',\r\n        type: 'error'\r\n      })\r\n      console.log(err)\r\n    })\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: 'TÍTULO',\r\n    minWidth: '260px',\r\n    selector: 'title',\r\n    sortable: true,\r\n    cell: (row) => (\r\n      <Link\r\n        to={`${Url.dashboardInbox}/${row.id}`}\r\n        className='user-name text-truncate mb-0'\r\n      >\r\n        <span className='font-weight-bold'>{row?.attributes?.title}</span>\r\n      </Link>\r\n    )\r\n  },\r\n{\r\n  name: 'ESTADO',\r\n    minWidth: '260px',\r\n      selector: 'status',\r\n        sortable: true,\r\n          cell: (row) => (\r\n            <div style={{ width: '100%' }}>\r\n              <Select\r\n                menuPlacement=\"auto\"\r\n                menuPosition=\"fixed\"\r\n                theme={selectThemeColors}\r\n                className=\"react-select\"\r\n                classNamePrefix=\"select\"\r\n                defaultValue={statusTicketsObj[row?.attributes?.state] || {}}\r\n                onChange={(e) => handleChangeStatus(e, row.id)}\r\n                options={statusTicketsArray.map((dataMap) => ({\r\n                  value: dataMap.value,\r\n                  label: dataMap.label,\r\n                }))}\r\n              />\r\n            </div>\r\n            // statusTickets(row.status)\r\n          )\r\n},\r\n{\r\n  name: 'DIRECCIÓN',\r\n    minWidth: '260px',\r\n      selector: 'address',\r\n        sortable: true,\r\n          cell: (row) => row?.attributes?.address,\r\n  },\r\n{\r\n  name: 'FECHA SLA',\r\n    minWidth: '150px',\r\n      selector: 'createDate',\r\n        sortable: true,\r\n          cell: (row) => formatDate(row?.attributes?.createdAt),\r\n  },\r\n{\r\n  name: 'Oficial',\r\n    minWidth: '400px',\r\n      selector: 'ownerFirstName',\r\n        sortable: true,\r\n          cell: (row) => {\r\n            const userInfo = {\r\n              id: row?.attributes?.owner?.data?.id,\r\n              firstName: row?.attributes?.owner?.data?.attributes?.firstname,\r\n              lastName: row?.attributes?.owner?.data?.attributes?.lastname,\r\n              cedula: row?.attributes?.owner?.data?.attributes?.cedula,\r\n            }\r\n\r\n            return rowClient(userInfo)\r\n          },\r\n  },\r\n{\r\n  name: 'INSTITUCIÓN',\r\n    minWidth: '400px',\r\n      selector: 'institutionName',\r\n        sortable: true,\r\n          cell: (row) => {\r\n            const institutionInfo = {\r\n              id: row?.attributes?.institution?.data?.id,\r\n              acronym: row?.attributes?.institution?.data?.attributes?.acronym,\r\n              name: row?.attributes?.institution?.data?.attributes?.name\r\n            }\r\n\r\n            return rowInstitution(institutionInfo)\r\n          }\r\n},\r\n{\r\n  name: 'Cliente',\r\n    minWidth: '400px',\r\n      selector: 'customerFirstName',\r\n        sortable: true,\r\n          cell: (row) => {\r\n            const userInfo = {\r\n              id: row?.attributes?.beneficiary?.data?.id,\r\n              firstName: row?.attributes?.beneficiary?.data?.attributes?.name,\r\n              lastName: \"\",\r\n              cedula: row?.attributes?.beneficiary?.data?.attributes?.cedula,\r\n            }\r\n\r\n            return rowClient(userInfo)\r\n          },\r\n  },\r\n{\r\n  name: 'PRIORIDAD',\r\n    minWidth: '150px',\r\n      selector: 'priority',\r\n        sortable: true,\r\n          cell: (row) => statusPriority(row?.attributes?.priority),\r\n  },\r\n{\r\n  name: 'Acciones',\r\n    minWidth: '50px',\r\n      cell: (row) => (\r\n        <UncontrolledDropdown>\r\n          <DropdownToggle tag=\"div\" className=\"btn btn-sm\">\r\n            <MoreVertical size={14} className=\"cursor-pointer\" />\r\n          </DropdownToggle>\r\n          <DropdownMenu right>\r\n            {/* <DropdownItem\r\n                tag={Link}\r\n                to={`${url?.details}/${rowId}`}\r\n                className=\"w-100\"\r\n                >\r\n                <FileText size={14} className=\"mr-50\" />\r\n                <span className=\"align-middle\">Detalles</span>\r\n            </DropdownItem> */}\r\n            <DropdownItem\r\n              tag={Link}\r\n              to={`${Url.dashboardInbox}/${row.id}`}\r\n              className=\"w-100\"\r\n            >\r\n              <Archive size={14} className=\"mr-50\" />\r\n              <span className=\"align-middle\">Detalles</span>\r\n            </DropdownItem>\r\n            {/* <DropdownItem className=\"w-100\">\r\n                <Trash2 size={14} className=\"mr-50\" />\r\n                <span className=\"align-middle\">Borrar</span>\r\n            </DropdownItem> */}\r\n          </DropdownMenu>\r\n        </UncontrolledDropdown>\r\n      )\r\n},\r\n]","export const territoriesLabel = {\r\n  selectNoRegionsFound: 'No se encontraron regiones',\r\n  selectNoProvincesFound: 'No se encontraron provincias',\r\n  selectNoMunicipalitiesFound: 'No se encontraron municipios',\r\n}\r\n","import { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Label } from 'reactstrap'\r\nimport Select from 'react-select'\r\n\r\nimport { selectThemeColors } from '@utils'\r\n\r\nimport { columns } from './columns'\r\nimport DataTableList from './table'\r\nimport CardGrid from '../../../../@core/components/card-grid'\r\nimport ComponentSpinner from '../../../../@core/components/spinner/Loading-spinner'\r\n\r\nimport { getAllTicketsActions } from '../../../../redux/actions/zammad/tickets'\r\nimport { getAllRegionsActions } from '../../../../redux/actions/territories/regions'\r\nimport { territoriesLabel } from '../../../../constants/label/territories'\r\nimport {\r\n  noOptionsMessageSelect,\r\n  optionsCodeValueSelectNoData,\r\n} from '../../../../utility/Utils'\r\nimport { getProvincesByRegionActions } from '../../../../redux/actions/territories/provinces'\r\nimport { getMunicipalitiesByprovincesByRegionsActions } from '../../../../redux/actions/territories/municipalities'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\r\nimport { getAllTickets } from '../../../../services/zammad/ticket'\r\nimport { ticketNewObjectFiltered } from '../../../../utility/zammad/filterData'\r\nimport { sweetAlertError } from '../../../../@core/components/sweetAlert'\r\nimport { strapiGetTickets } from '../../../../services/strapi/tickets'\r\n\r\nconst Bandeja = function() {\r\n  const dispatch = useDispatch()\r\n\r\n  const [ dataTableTickets, setDataTableTickets ] = useState([])\r\n  const [loadingTicket, setLoadingTicket] = useState(true)\r\n  const [valueSearch, setValueSearch] = useState(\"\")\r\n  const [valueZone, setValueZone] = useState(\"\")\r\n  const [ pageNumber, setPageNumber ] = useState(1)\r\n  console.log(valueZone)\r\n\r\n  useEffect(() => {\r\n    strapiGetTickets({valueSearch, valueZone, pageNumber})\r\n      .then(res => setDataTableTickets(res.data))\r\n      .catch(() => sweetAlertError())\r\n      .finally(() => setLoadingTicket(false))\r\n\r\n    // dispatch(getAllTicketsActions())\r\n    // getAllTickets()\r\n    //   .then(res => {\r\n    //     setDataTableTickets(\r\n    //       ticketNewObjectFiltered(res.data.assets.Ticket, res.data.assets)\r\n    //     )\r\n    //   })\r\n    //   .catch(err => {\r\n    //     console.log(err)\r\n    //     sweetAlertError()\r\n    //   })\r\n    //   .finally(() => setLoadingTicket(false))\r\n  }, [valueSearch, valueZone, pageNumber])\r\n  \r\n  useEffect(() => {\r\n    dispatch(getAllRegionsActions())\r\n  },[dispatch])\r\n\r\n  // const dataTableTickets = useSelector((state) => state?.tickets?.listTickets)\r\n\r\n  const regionsSelector = useSelector((state) => state?.regions?.regions)\r\n  const provincesSelector = useSelector((state) => state?.provinces?.provinces)\r\n  const municipalitiesSelector = useSelector((state) => state?.municipalities?.municipalities)\r\n\r\n  const defaultValueState = {value: '', label: 'Sin Seleccionar'}\r\n  const [regionState, setRegionState] = useState(defaultValueState)\r\n  const [provinciaState, setProvinciaState] = useState(defaultValueState)\r\n  const [municipioState, setMunicipioState] = useState(defaultValueState)\r\n\r\n  // const [dataTable, setDataTable] = useState([])\r\n  // console.log(dataTable)\r\n\r\n  // useEffect(() => {\r\n  //   setDataTable(dataTableTickets)\r\n  // }, [dataTableTickets])\r\n\r\n  const handleChangeRegions = (e) => {\r\n    if(e.value) {\r\n      setRegionState(e)\r\n      setValueZone(e.value)\r\n      setProvinciaState(defaultValueState)\r\n      setMunicipioState(defaultValueState)\r\n      // filterTickets(value, 2)\r\n    } else {\r\n      setRegionState(defaultValueState)\r\n      setProvinciaState(defaultValueState)\r\n      setMunicipioState(defaultValueState)\r\n      setValueZone(\"\")\r\n      // setDataTable(dataTableTickets)\r\n    }\r\n\r\n    dispatch(getProvincesByRegionActions(e.value))\r\n  }\r\n\r\n  const handleChangeProvinces = (e) => {\r\n    if (e.value) {\r\n      setProvinciaState(e)\r\n      setValueZone(regionState.value + e.value)\r\n      // filterTickets(regionState.value + value, 4)\r\n    } else {\r\n      setProvinciaState(defaultValueState)\r\n      setMunicipioState(defaultValueState)\r\n      setValueZone(regionState.value)\r\n      // filterTickets(regionState.value, 2)\r\n    }\r\n\r\n    dispatch(getMunicipalitiesByprovincesByRegionsActions(regionState.value, e.value),)\r\n  }\r\n\r\n  const handleChangeMunicipalities = (e) => {\r\n    if (e.value) {\r\n      setMunicipioState(e)\r\n      setValueZone(regionState.value + provinciaState.value + e.value)\r\n      // filterTickets(regionState.value + provinciaState.value + value, 6)\r\n    } else {\r\n      setMunicipioState(defaultValueState)\r\n      setValueZone(regionState.value + provinciaState.value)\r\n      // filterTickets(regionState.value + provinciaState.value, 4)\r\n    }\r\n  }\r\n\r\n  // const filterTickets = (value, positionToFind = 0) => {\r\n  //   return console.log(dataTableTickets)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <CardGrid cardHeaderTitle=\"Búsqueda con filtro\">\r\n        <Row>\r\n          <Col md=\"4\">\r\n            <Label>Región</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              value={regionState}\r\n              isLoading={!regionsSelector[0]}\r\n              options={optionsCodeValueSelectNoData(regionsSelector)}\r\n              onChange={(e) => handleChangeRegions(e)}\r\n              noOptionsMessage={({ inputValue }) =>\r\n                noOptionsMessageSelect(\r\n                  inputValue,\r\n                  territoriesLabel.selectNoRegionsFound,\r\n                )\r\n              }\r\n            />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Label>Provincia</Label>\r\n            <Select\r\n              theme={selectThemeColors}\r\n              isClearable={false}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              value={provinciaState}\r\n              isLoading={!provincesSelector[0]}\r\n              options={optionsCodeValueSelectNoData(provincesSelector)}\r\n              onChange={(e) => handleChangeProvinces(e)}\r\n              noOptionsMessage={({ inputValue }) =>\r\n                noOptionsMessageSelect(\r\n                  inputValue,\r\n                  territoriesLabel.selectNoProvincesFound,\r\n                )\r\n              }\r\n            />\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <Label>Municipio</Label>\r\n            <Select\r\n              isClearable={false}\r\n              theme={selectThemeColors}\r\n              className=\"react-select\"\r\n              classNamePrefix=\"select\"\r\n              value={municipioState}\r\n              isLoading={!municipalitiesSelector[0]}\r\n              options={optionsCodeValueSelectNoData(municipalitiesSelector)}\r\n              onChange={(e) => handleChangeMunicipalities(e)}\r\n              noOptionsMessage={({ inputValue }) =>\r\n                noOptionsMessageSelect(\r\n                  inputValue,\r\n                  territoriesLabel.selectNoMunicipalitiesFound,\r\n                )\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </CardGrid>\r\n\r\n      {dataTableTickets && (\r\n        <DataTableList\r\n          columnsTable={columns}\r\n          setValueSearch={setValueSearch}\r\n          setPageNumber={setPageNumber}\r\n          dataTable={dataTableTickets}\r\n          showButtonAddReport\r\n          loadingTable={loadingTicket}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Bandeja\r\n","export const zammadApi = {\r\n  tickets: 'tickets',\r\n  ticketById: (id) => `tickets/${id}?expand=true`,\r\n  allTickets: 'ticket_overviews?view=all',\r\n  ticketsByDate: 'tickets/search?query=created_at:',\r\n  ticketsByState: 'tickets/search?query=state_id:',\r\n  ticketsByGroup: 'tickets/search?query=group_id:',\r\n\r\n  ticketPriorities: 'ticket_priorities',\r\n  \r\n  ticketStates: 'ticket_states',\r\n  \r\n  postTags: 'tag_list',\r\n  tagsByName: (name) => `tag_search?term=${name}`,\r\n  \r\n  postTicketTags: 'tags/add',\r\n  ticketTags: (id) => `tags?object=Ticket&o_id=${id}`,\r\n\r\n  ticketArticles: 'ticket_articles/by_ticket/',\r\n  postTicketArticles: 'ticket_articles',\r\n  ticketArticlesAttachment: 'ticket_attachment/',\r\n\r\n  users: 'users',\r\n  userMe: 'users/me?expand=true',\r\n  userById: (id) => `users/${id}?expand=true`,\r\n  userByCedula: 'users/search?query=cedula:',\r\n  allUsers: 'users?expand=true',\r\n\r\n  allRols: 'roles',\r\n\r\n  organizations: 'organizations',\r\n  organizationsByAcronym: (acronym) => `organizations/search?query=acronimo:${acronym}`,\r\n\r\n  groups: 'groups',\r\n}\r\n","export const territoriesApi = {\r\n  regions: 'regions',\r\n  provinces: 'provinces',\r\n  municipalities: 'municipalities',\r\n\r\n  regionByIdentifier: (id) => `regions?identifier=${id}`,\r\n  provinceByIdentifier: (id) => `provinces?identifier=${id}`,\r\n  municipalityByIdentifier: (id) => `municipalities?identifier=${id}`,\r\n  districtByIdentifier: (id) => `districts?identifier=${id}`,\r\n  sectionByIdentifier: (id) => `sections?identifier=${id}`,\r\n  neighborhoodByIdentifier: (id) => `neighborhoods?identifier=${id}`,\r\n  subNeighborhoodByIdentifier: (id) => `sub-neighborhoods?identifier=${id}`,\r\n\r\n  provincesByRegion: (id) => `regions/${id}/provinces`,\r\n\r\n  municipalitiesByprovincesByRegions: (idRegions, idProvinces) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities`,\r\n\r\n  districtByIdProvinceByIdMunicipality: (idRegions, idProvinces, idMunicipality) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts`,\r\n\r\n  sectionByIdMunicipalityByIdDistrict: (idRegions, idProvinces, idMunicipality, idDistrict) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts/${idDistrict}/sections`,\r\n\r\n  neighborhoodByIdDistrictByIdSection: (idRegions, idProvinces, idMunicipality, idDistrict, idSection) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts/${idDistrict}/sections/${idSection}/neighborhoods`,\r\n\r\n  subNeighborhoodByIdSectionByIdNeighborhood: (idRegions, idProvinces, idMunicipality, idDistrict, idSection, idNeighborhood) =>\r\n    `regions/${idRegions}/provinces/${idProvinces}/municipalities/${idMunicipality}/districts/${idDistrict}/sections/${idSection}/neighborhoods/${idNeighborhood}/sub-neighborhoods`,\r\n\r\n}\r\n","import { Card, CardHeader, CardTitle, CardBody } from 'reactstrap'\r\n\r\nconst CardGrid = ({cardHeaderTitle, cardHeaderComponent, children}) => {\r\n\r\n    return (\r\n        <Card>\r\n            {cardHeaderTitle || cardHeaderComponent ? <>\r\n                <CardHeader>\r\n                    {cardHeaderTitle &&\r\n                        <CardTitle tag='h4'>{cardHeaderTitle}</CardTitle>\r\n                    }\r\n                    {cardHeaderComponent &&\r\n                        cardHeaderComponent()\r\n                    }\r\n                </CardHeader> \r\n                </> : null\r\n            }\r\n\r\n            <CardBody>\r\n                {children}\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardGrid","import { zammadAxios } from '../../../configs/axios'\r\nimport { zammadApi } from '../../../constants/api/zammadApi'\r\n\r\nexport const postGroup = async (data) => await zammadAxios.post(zammadApi.groups, data)\r\n\r\nexport const putGroup = async (id, data) => await zammadAxios.put(`${zammadApi.groups}/${id}`, data)\r\n\r\nexport const getGroups = async () => await zammadAxios.get(zammadApi.groups)\r\n","import { zammadAxios } from '../../../configs/axios'\r\nimport { zammadApi } from '../../../constants/api/zammadApi'\r\n\r\nexport const postUser = async (dataObj) => await zammadAxios.post(zammadApi.users, dataObj)\r\n\r\nexport const putUser = async (dataObj) => await zammadAxios.put(`${zammadApi.users}/${dataObj.id}`, dataObj)\r\n\r\nexport const getUserMe = async () => await zammadAxios.get(zammadApi.userMe)\r\n\r\nexport const getUserById = async (id) => await zammadAxios.get(zammadApi.userById(id))\r\n\r\nexport const getUserByCedula = async (id) => await zammadAxios.get(`${zammadApi.userByCedula}${id}`)\r\n\r\nexport const getAllUsers = async () => await zammadAxios.get(zammadApi.allUsers)\r\n","import { territoriesAxios } from '../../../../configs/axios'\r\nimport { territoriesApi } from '../../../../constants/api/territoriesApi'\r\nimport { territoriesTypes } from '../../../types/territories'\r\n\r\nexport const getAllRegionsActions = () => (dispatch) =>\r\n  territoriesAxios.get(territoriesApi.regions).then((response) => {\r\n    dispatch({\r\n      type: territoriesTypes.GET_REGIONS,\r\n      payload: response.data.data,\r\n    })\r\n  })\r\n","import { territoriesAxios } from '../../../../configs/axios'\r\nimport { territoriesApi } from '../../../../constants/api/territoriesApi'\r\nimport { territoriesTypes } from '../../../types/territories'\r\n\r\nexport const getAllMunicipalitiesActions = () => (dispatch) =>\r\n  territoriesAxios.get(territoriesApi.municipalities).then((response) => {\r\n    dispatch({\r\n      type: territoriesTypes.GET_MUNICIPALITIES,\r\n      payload: response.data.data,\r\n    })\r\n  })\r\n\r\nexport const getMunicipalitiesByprovincesByRegionsActions =\r\n  (idRegions = null, idProvinces = null) =>\r\n  (dispatch) => {\r\n    if (idRegions && idProvinces) {\r\n      return territoriesAxios\r\n        .get(\r\n          territoriesApi.municipalitiesByprovincesByRegions(\r\n            idRegions,\r\n            idProvinces,\r\n          ),\r\n        )\r\n        .then((response) => {\r\n          dispatch({\r\n            type: territoriesTypes.GET_MUNICIPALITIES_BY_PROVINCES_BY_REGIONS,\r\n            payload: response.data.data,\r\n          })\r\n        })\r\n    }\r\n\r\n    return dispatch(cleanSelectMunicipalities())\r\n  }\r\n\r\nexport const cleanSelectMunicipalities = () => ({\r\n  type: territoriesTypes.CLEAN_SELECT_MUNICIPALITIES,\r\n})\r\n","export const New = {id: 1, value: 'new', label: 'Nuevo'}\r\nexport const Open = {id: 2, value: 'open', label: 'Abierto'}\r\nexport const PendingReminder = {id: 3, value: 'pending_reminder', label: 'Pendiente Recordatorio'}\r\nexport const Closed = {id: 4, value: 'closed', label: 'Cerrado'}\r\nexport const Merged = {id: 5, value: 'merged', label: 'Fusionado'}\r\nexport const Removed = {id: 6, value: 'removed', label: 'Removido'}\r\n\r\nexport const statusTicketsObj = {\r\n  new: {\r\n    idN: 1,\r\n    id: 'new',\r\n    value: 'new',\r\n    label: 'Nuevo',\r\n    color: '#3498DB',\r\n  },\r\n  open: {\r\n    idN: 2,\r\n    id: 'open',\r\n    value: 'open',\r\n    label: 'Abierto',\r\n    color: '#5ECB08',\r\n  },\r\n  pending_reminder: {\r\n    idN: 3,\r\n    id: 'pending_reminder',\r\n    value: 'pending_reminder',\r\n    label: 'Pendiente Recordatorio',\r\n  },\r\n  closed: {\r\n    idN: 4,\r\n    id: 'closed',\r\n    value: 'closed',\r\n    label: 'Cerrado',\r\n    color: '#CFCFCF',\r\n  },\r\n  merged: {\r\n    idN: 5,\r\n    id: 'merged',\r\n    value: 'merged',\r\n    label: 'Fusionado',\r\n  },\r\n  removed: {\r\n    idN: 6,\r\n    id: 'removed',\r\n    value: 'removed',\r\n    label: 'En Progreso',\r\n  },\r\n}\r\n\r\nexport const statusTicketsArray = [\r\n  New,\r\n  Open,\r\n  PendingReminder,\r\n  Closed,\r\n  Merged,\r\n  Removed,\r\n]\r\n","import { strapiAxios } from '../../../configs/axios'\r\nimport { strapiApi } from '../../../constants/api/strapiApi'\r\n\r\nexport const strapiGetTickets = async ({valueSearch, valueZone, pageNumber}) => await strapiAxios.get(strapiApi.tickets.ticket({valueSearch, valueZone, pageNumber}))\r\n\r\nexport const strapiGetTicketsById = async (id) => await strapiAxios.get(strapiApi.tickets.ticketId(id))\r\n\r\nexport const strapiPostTickets = async (data) => await strapiAxios.post(strapiApi.tickets.ticketPost, data)\r\n\r\nexport const strapiPutStateTicket = async (id, data) => await strapiAxios.put(strapiApi.tickets.ticketId(id), data)\r\n\r\nexport const strapiImportTickets = async (data) => await strapiAxios.post(strapiApi.tickets.ticketImport, data)\r\n","import { territoriesAxios } from '../../../../configs/axios'\r\nimport { territoriesApi } from '../../../../constants/api/territoriesApi'\r\nimport { territoriesTypes } from '../../../types/territories'\r\nimport { cleanSelectMunicipalities } from '../municipalities'\r\n\r\nexport const getAllProvincesActions = () => (dispatch) =>\r\n  territoriesAxios.get(territoriesApi.provinces).then((response) => {\r\n    dispatch({\r\n      type: territoriesTypes.GET_PROVINCES,\r\n      payload: response.data.data,\r\n    })\r\n  })\r\n\r\nexport const getProvincesByRegionActions =\r\n  (id = null) =>\r\n  (dispatch) => {\r\n    if (id) {\r\n      return territoriesAxios\r\n        .get(territoriesApi.provincesByRegion(id))\r\n        .then((response) => {\r\n          dispatch({\r\n            type: territoriesTypes.GET_PROVINCES_BY_REGION,\r\n            payload: response.data.data,\r\n          })\r\n        })\r\n    }\r\n\r\n    return (\r\n      dispatch(cleanSelectProvinces()), dispatch(cleanSelectMunicipalities())\r\n    )\r\n  }\r\n\r\nexport const cleanSelectProvinces = () => ({\r\n  type: territoriesTypes.CLEAN_SELECT_PROVINCES,\r\n})\r\n","import { statusTicketsObj } from '../../../constants/Status/statusTickets'\r\nimport {\r\n  Badge,\r\n} from 'reactstrap'\r\n\r\nexport const statusTickets = (status) => {\r\n\r\n    const changeColorLabel = () => {\r\n        switch (status) {\r\n            // case statusTicketsObj.new.id:\r\n            case 'new':\r\n                return statusTicketsObj.new\r\n\r\n            // case statusTicketsObj.open.id:\r\n            case 'open':\r\n                return statusTicketsObj.open\r\n\r\n            // case statusTicketsObj.pendingReminder.id:\r\n            case \"pending_reminder\":\r\n                return statusTicketsObj.pendingReminder\r\n\r\n            // case statusTicketsObj.closed.id:\r\n            case \"closed\":\r\n                return statusTicketsObj.closed\r\n\r\n            // case statusTicketsObj.merged.id:\r\n            case \"merged\":\r\n                return statusTicketsObj.merged\r\n\r\n            // case statusTicketsObj.inProgress.id:\r\n            case \"removed\":\r\n                return statusTicketsObj.inProgress\r\n            \r\n            default: \r\n                return null\r\n        }\r\n    }\r\n\r\n    const sytleStatus = {\r\n        width: '10px',\r\n        height: '10px',\r\n        borderRadius: '2px',\r\n        display: 'inline-block',\r\n        marginRight: '7px',\r\n        background: changeColorLabel()?.color\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <span \r\n                style={sytleStatus}    \r\n            />\r\n            <span className=\"text-truncate\">{changeColorLabel()?.label}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const statusPriority = (statusId) => {\r\n    switch (statusId) {\r\n        case 'low':\r\n            return <Badge color=\"light-success\">Baja</Badge>\r\n\r\n        case 'normal':\r\n            return <Badge color=\"light-warning\">Normal</Badge>\r\n\r\n        case 'high':\r\n            return <Badge color=\"light-danger\">Alta</Badge>\r\n\r\n        default:\r\n            return <Badge color=\"light-primary\">Desconocida</Badge>\r\n    }\r\n}","import { zammadAxios } from '../../../../configs/axios'\r\nimport { zammadApi } from '../../../../constants/api/zammadApi'\r\nimport { zammadTypes } from '../../../types/zammad'\r\n\r\nexport const getAllTicketsActions = () => (dispatch) =>\r\n  zammadAxios.get(zammadApi.allTickets).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n\r\nexport const getTicketsByDateActions = (date) => (dispatch) =>\r\n  zammadAxios.get(`${zammadApi.ticketsByDate}${date}`).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS_DATE,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n\r\nexport const getTicketsByTwoDateActions = (date1, date2) => (dispatch) =>\r\n  zammadAxios\r\n    .get(`${zammadApi.ticketsByDate}[${date1} TO ${date2}]`)\r\n    .then((response) => {\r\n      dispatch({\r\n        type: zammadTypes.GET_TICKETS_TWO_DATE,\r\n        payload: response.data.assets,\r\n      })\r\n    })\r\n\r\nexport const getTicketsByStateActions = (idState) => (dispatch) =>\r\n  zammadAxios.get(`${zammadApi.ticketsByState}${idState}`).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS_STATE,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n\r\nexport const getTicketsByGroupActions = (idGroup) => (dispatch) =>\r\n  zammadAxios.get(`${zammadApi.ticketsByGroup}${idGroup}`).then((response) => {\r\n    dispatch({\r\n      type: zammadTypes.GET_TICKETS_GROUP,\r\n      payload: response.data.assets,\r\n    })\r\n  })\r\n"],"sourceRoot":""}